<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0515.1630                               -->
<workbook original-version='18.1' source-build='2019.2.0 (20192.19.0515.1630)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Customers' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='5' max='20' min='5' />
      </column>
      <column caption='Profit Bin Size' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='200'>
        <calculation class='tableau' formula='200' />
        <range granularity='50' max='200' min='50' />
      </column>
      <column caption='Enter Sales' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='6354.0495247623803'>
        <calculation class='tableau' formula='6354.0495247623803' />
        <range max='50000.0' min='1.0' />
      </column>
    </datasource>
    <datasource inline='true' name='Sample - Superstore' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection name='Sample - Superstoreleaf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/adity/Documents/TableauWork/Customer_SuperStore.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='Sample - Superstoreleaf' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C794:no:A1:C794:0' header='yes' outcome='6'>
            <column datatype='string' name='Customer Name' ordinal='0' />
            <column datatype='integer' name='Sales' ordinal='1' />
            <column datatype='integer' name='Profit' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C794:no:A1:C794:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Profit Ratio' datatype='real' default-format='p0%' name='[Calculation_5571209093911105]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' scope-isolation='false' />
      </column>
      <column caption='PythonRegressionCoeff' datatype='real' name='[Calculation_954763124606873600]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;import numpy as np&#13;&#10;from sklearn.linear_model import LinearRegression&#13;&#10;model = LinearRegression()&#13;&#10;df_X = np.array(_arg1).reshape(-1,1)&#13;&#10;df_Y = np.array(_arg2).reshape(-1,1)&#13;&#10;model.fit(df_X, df_Y)&#13;&#10;return np.asscalar(model.coef_)&#13;&#10;&quot;, sum([Sales]),sum([Profit]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Predicted Profit' datatype='real' name='[Calculation_954763124608311297]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[PythonRegressionCoeff (copy)] + (Sum([Sales]) * [Calculation_954763124606873600])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='MySales' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Calculation_954763124622024706]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Parameter 3]' />
      </column>
      <column caption='MyProfit' datatype='real' name='[Calculation_954763124622102531]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;return tabpy.query(&apos;PredictProfit&apos;,_arg1[0])[&apos;response&apos;][0]&quot;, [Calculation_954763124622024706])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='My Sales' datatype='string' name='[Calculation_954763124742537220]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;My Sales:   &quot; + STR([Calculation_954763124622024706])' />
      </column>
      <column caption='My Predicted Profit' datatype='string' name='[Calculation_954763124742791173]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&apos;Predicted Profit&apos;' />
      </column>
      <column caption='Break Even' datatype='integer' name='[Calculation_954763124746252294]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0' />
      </column>
      <column caption='Profit Indicator' datatype='string' name='[Calculation_954763124746903559]' role='measure' type='nominal'>
        <calculation class='tableau' formula='If [Calculation_954763124622102531] &lt;0 then &apos;Red&apos;&#13;&#10;ELSEIF [Calculation_954763124622102531] &gt;= 0 and [Calculation_954763124622102531] &lt;100 then &apos;Grey&apos;&#13;&#10;ELSEIF [Calculation_954763124622102531] &gt;= 100 and [Calculation_954763124622102531] &lt;5000 then &apos;Green&apos;&#13;&#10;Else &apos;Gold&apos;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' caption='Profit (bin)' datatype='integer' name='[Profit (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Profit]' peg='0' size-parameter='[Parameters].[Parameter 2]' />
      </column>
      <column caption='Profit Message' datatype='string' name='[Profit Indicator (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='If [Calculation_954763124622102531] &lt;0 then &apos;You are losing money :(&apos;&#13;&#10;ELSEIF [Calculation_954763124622102531] &gt;= 0 and [Calculation_954763124622102531] &lt;100 then &apos;You need to sell more ...&apos;&#13;&#10;ELSEIF [Calculation_954763124622102531] &gt;= 100 and [Calculation_954763124622102531] &lt;5000 then &apos;Great work! You are making money.&apos;&#13;&#10;Else &apos;You are a top performer!!&apos;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' default-format='c&quot;$&quot;#,##0' name='[Profit]' role='measure' type='quantitative' />
      <column caption='PythonRegressionIntercept' datatype='real' name='[PythonRegressionCoeff (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;import numpy as np&#13;&#10;from sklearn.linear_model import LinearRegression&#13;&#10;model = LinearRegression()&#13;&#10;df_X = np.array(_arg1).reshape(-1,1)&#13;&#10;df_Y = np.array(_arg2).reshape(-1,1)&#13;&#10;model.fit(df_X, df_Y)&#13;&#10;return np.asscalar(model.intercept_)&#13;&#10;&quot;, sum([Sales]),sum([Profit]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' default-format='c&quot;$&quot;#,##0' name='[Sales]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_954763124608311297]' derivation='User' name='[usr:Calculation_954763124608311297:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[Sample - Superstore].[Customer Name]' ordering-type='Field' />
        <table-calc field='[Sample - Superstore].[PythonRegressionCoeff (copy)]' ordering-field='[Sample - Superstore].[Customer Name]' ordering-type='Field' />
        <table-calc field='[Sample - Superstore].[Calculation_954763124606873600]' ordering-field='[Sample - Superstore].[Customer Name]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_954763124608311297]' derivation='User' name='[usr:Calculation_954763124608311297:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[Sample - Superstore].[PythonRegressionCoeff (copy)]' ordering-type='Rows' />
        <table-calc field='[Sample - Superstore].[Calculation_954763124606873600]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_954763124746903559]' derivation='User' name='[usr:Calculation_954763124746903559:nk:1]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[Sample - Superstore].[Calculation_954763124622102531]' ordering-field='' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_954763124746903559]' derivation='User' name='[usr:Calculation_954763124746903559:nk:3]' pivot='key' type='nominal'>
        <table-calc ordering-type='Columns' />
        <table-calc field='[Sample - Superstore].[Calculation_954763124622102531]' ordering-field='' ordering-type='Field' />
      </column-instance>
      <group name='[Top Customers by Profit]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Location' />
        <drill-path name='Product' />
      </drill-paths>
      <folder name='Customer' role='dimensions'>
        <folder-item name='[Customer Name]' type='field' />
      </folder>
      <folder name='Order' role='dimensions' />
      <layout dim-ordering='alphabetic' dim-percentage='0.325513' group-percentage='0.0840665' measure-ordering='alphabetic' measure-percentage='0.446725' parameter-percentage='0.143695' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_954763124746903559:nk:1]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Red&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#e15759'>
              <bucket>&quot;[Sample - Superstore].[usr:Calculation_954763124608311297:qk:3]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Sample - Superstore].[usr:Calculation_954763124608311297:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[Sample - Superstore].[sum:Profit:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_954763124746903559:nk:3]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Red&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gold&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top Customers' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
          <range granularity='5' max='20' min='5' />
        </column>
        <column caption='Profit Bin Size' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='200'>
          <calculation class='tableau' formula='200' />
          <range granularity='50' max='200' min='50' />
        </column>
        <column caption='Enter Sales' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='6354.0495247623803'>
          <calculation class='tableau' formula='6354.0495247623803' />
          <range max='50000.0' min='1.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Base Table'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='PythonRegressionCoeff' datatype='real' name='[Calculation_954763124606873600]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;import numpy as np&#13;&#10;from sklearn.linear_model import LinearRegression&#13;&#10;model = LinearRegression()&#13;&#10;df_X = np.array(_arg1).reshape(-1,1)&#13;&#10;df_Y = np.array(_arg2).reshape(-1,1)&#13;&#10;model.fit(df_X, df_Y)&#13;&#10;return np.asscalar(model.coef_)&#13;&#10;&quot;, sum([Sales]),sum([Profit]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Predicted Profit' datatype='real' name='[Calculation_954763124608311297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[PythonRegressionCoeff (copy)] + (Sum([Sales]) * [Calculation_954763124606873600])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='c&quot;$&quot;#,##0' name='[Profit]' role='measure' type='quantitative' />
            <column caption='PythonRegressionIntercept' datatype='real' name='[PythonRegressionCoeff (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;import numpy as np&#13;&#10;from sklearn.linear_model import LinearRegression&#13;&#10;model = LinearRegression()&#13;&#10;df_X = np.array(_arg1).reshape(-1,1)&#13;&#10;df_Y = np.array(_arg2).reshape(-1,1)&#13;&#10;model.fit(df_X, df_Y)&#13;&#10;return np.asscalar(model.intercept_)&#13;&#10;&quot;, sum([Sales]),sum([Profit]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' default-format='c&quot;$&quot;#,##0' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_954763124606873600]' derivation='User' name='[usr:Calculation_954763124606873600:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_954763124608311297]' derivation='User' name='[usr:Calculation_954763124608311297:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[Sample - Superstore].[PythonRegressionCoeff (copy)]' ordering-type='Columns' />
              <table-calc field='[Sample - Superstore].[Calculation_954763124606873600]' ordering-type='Columns' />
            </column-instance>
            <column-instance column='[PythonRegressionCoeff (copy)]' derivation='User' name='[usr:PythonRegressionCoeff (copy):qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Superstore].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Superstore].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Superstore].[sum:Profit:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[Sample - Superstore].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[Sample - Superstore].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[Sample - Superstore].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[Sample - Superstore].[usr:Calculation_954763124606873600:qk:1]&quot;</bucket>
              <bucket>&quot;[Sample - Superstore].[usr:PythonRegressionCoeff (copy):qk:1]&quot;</bucket>
              <bucket>&quot;[Sample - Superstore].[usr:Calculation_954763124608311297:qk:4]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[Sample - Superstore].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[Sample - Superstore].[usr:Calculation_954763124606873600:qk:1]' value='n#,##0.00000000;-#,##0.00000000' />
            <format attr='text-format' field='[Sample - Superstore].[usr:PythonRegressionCoeff (copy):qk:1]' value='n#,##0.000;-#,##0.000' />
            <format attr='text-format' field='[Sample - Superstore].[usr:Calculation_954763124608311297:qk:4]' value='n#,##0.000000;-#,##0.000000' />
            <format attr='width' field='[Sample - Superstore].[:Measure Names]' value='162' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Sample - Superstore].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[none:Customer Name:nk]</rows>
        <cols>[Sample - Superstore].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{A2B1B1FF-787C-4726-9E27-96029C1029A7}' />
    </worksheet>
    <worksheet name='Check Results'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Checking Results from Python</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='PythonRegressionCoeff' datatype='real' name='[Calculation_954763124606873600]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;import numpy as np&#13;&#10;from sklearn.linear_model import LinearRegression&#13;&#10;model = LinearRegression()&#13;&#10;df_X = np.array(_arg1).reshape(-1,1)&#13;&#10;df_Y = np.array(_arg2).reshape(-1,1)&#13;&#10;model.fit(df_X, df_Y)&#13;&#10;return np.asscalar(model.coef_)&#13;&#10;&quot;, sum([Sales]),sum([Profit]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Predicted Profit' datatype='real' name='[Calculation_954763124608311297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[PythonRegressionCoeff (copy)] + (Sum([Sales]) * [Calculation_954763124606873600])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='c&quot;$&quot;#,##0' name='[Profit]' role='measure' type='quantitative' />
            <column caption='PythonRegressionIntercept' datatype='real' name='[PythonRegressionCoeff (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;import numpy as np&#13;&#10;from sklearn.linear_model import LinearRegression&#13;&#10;model = LinearRegression()&#13;&#10;df_X = np.array(_arg1).reshape(-1,1)&#13;&#10;df_Y = np.array(_arg2).reshape(-1,1)&#13;&#10;model.fit(df_X, df_Y)&#13;&#10;return np.asscalar(model.intercept_)&#13;&#10;&quot;, sum([Sales]),sum([Profit]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' default-format='c&quot;$&quot;#,##0' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_954763124606873600]' derivation='User' name='[usr:Calculation_954763124606873600:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_954763124608311297]' derivation='User' name='[usr:Calculation_954763124608311297:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[Sample - Superstore].[PythonRegressionCoeff (copy)]' ordering-type='Columns' />
              <table-calc field='[Sample - Superstore].[Calculation_954763124606873600]' ordering-type='Columns' />
            </column-instance>
            <column-instance column='[PythonRegressionCoeff (copy)]' derivation='User' name='[usr:PythonRegressionCoeff (copy):qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Superstore].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Superstore].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Superstore].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Superstore].[usr:Calculation_954763124606873600:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Superstore].[usr:PythonRegressionCoeff (copy):qk:1]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[Sample - Superstore].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[Sample - Superstore].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[Sample - Superstore].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[Sample - Superstore].[usr:Calculation_954763124606873600:qk:1]&quot;</bucket>
              <bucket>&quot;[Sample - Superstore].[usr:PythonRegressionCoeff (copy):qk:1]&quot;</bucket>
              <bucket>&quot;[Sample - Superstore].[usr:Calculation_954763124608311297:qk:4]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[Sample - Superstore].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[Sample - Superstore].[usr:Calculation_954763124606873600:qk:1]' value='n#,##0.00000000;-#,##0.00000000' />
            <format attr='text-format' field='[Sample - Superstore].[usr:PythonRegressionCoeff (copy):qk:1]' value='n#,##0.000;-#,##0.000' />
            <format attr='text-format' field='[Sample - Superstore].[usr:Calculation_954763124608311297:qk:4]' value='n#,##0.000000;-#,##0.000000' />
            <format attr='width' field='[Sample - Superstore].[:Measure Names]' value='80' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[Sample - Superstore].[:Measure Names]' value='80' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Sample - Superstore].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[none:Customer Name:nk]</rows>
        <cols>[Sample - Superstore].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{2818C62F-0F5A-4322-A413-6E1B8BF47BE4}' />
    </worksheet>
    <worksheet name='Customer Sales vs Profit'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='c&quot;$&quot;#,##0' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' default-format='c&quot;$&quot;#,##0' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[Sample - Superstore].[none:Customer Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[sum:Profit:qk]</rows>
        <cols>[Sample - Superstore].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{55F87008-8765-4905-8E5F-820284F4E6CA}' />
    </worksheet>
    <worksheet name='CustomerName Fitted with LR'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='PythonRegressionCoeff' datatype='real' name='[Calculation_954763124606873600]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;import numpy as np&#13;&#10;from sklearn.linear_model import LinearRegression&#13;&#10;model = LinearRegression()&#13;&#10;df_X = np.array(_arg1).reshape(-1,1)&#13;&#10;df_Y = np.array(_arg2).reshape(-1,1)&#13;&#10;model.fit(df_X, df_Y)&#13;&#10;return np.asscalar(model.coef_)&#13;&#10;&quot;, sum([Sales]),sum([Profit]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Predicted Profit' datatype='real' name='[Calculation_954763124608311297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[PythonRegressionCoeff (copy)] + (Sum([Sales]) * [Calculation_954763124606873600])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='c&quot;$&quot;#,##0' name='[Profit]' role='measure' type='quantitative' />
            <column caption='PythonRegressionIntercept' datatype='real' name='[PythonRegressionCoeff (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;import numpy as np&#13;&#10;from sklearn.linear_model import LinearRegression&#13;&#10;model = LinearRegression()&#13;&#10;df_X = np.array(_arg1).reshape(-1,1)&#13;&#10;df_Y = np.array(_arg2).reshape(-1,1)&#13;&#10;model.fit(df_X, df_Y)&#13;&#10;return np.asscalar(model.intercept_)&#13;&#10;&quot;, sum([Sales]),sum([Profit]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' default-format='c&quot;$&quot;#,##0' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_954763124608311297]' derivation='User' name='[usr:Calculation_954763124608311297:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[Sample - Superstore].[Customer Name]' ordering-type='Field' />
              <table-calc field='[Sample - Superstore].[PythonRegressionCoeff (copy)]' ordering-field='[Sample - Superstore].[Customer Name]' ordering-type='Field' />
              <table-calc field='[Sample - Superstore].[Calculation_954763124606873600]' ordering-field='[Sample - Superstore].[Customer Name]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Sample - Superstore].[usr:Calculation_954763124608311297:qk:3]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[Sample - Superstore].[none:Customer Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Sample - Superstore].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[Sample - Superstore].[none:Customer Name:nk]' />
              <color column='[Sample - Superstore].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Sample - Superstore].[usr:Calculation_954763124608311297:qk:3]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[Sample - Superstore].[none:Customer Name:nk]' />
              <path column='[Sample - Superstore].[none:Customer Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Sample - Superstore].[sum:Profit:qk] + [Sample - Superstore].[usr:Calculation_954763124608311297:qk:3])</rows>
        <cols>[Sample - Superstore].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{F3480906-E58C-47FA-938F-8C03E2D239CA}' />
    </worksheet>
    <worksheet name='Predicted Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#1b1b1b' fontname='Tableau Book' fontsize='18'>Your sales: &lt;[Sample - Superstore].[attr:Calculation_954763124622024706:qk]&gt;</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Book' fontsize='18'>&lt;[Sample - Superstore].[usr:Profit Indicator (copy):nk:1]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Enter Sales' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='6354.0495247623803'>
              <calculation class='tableau' formula='6354.0495247623803' />
              <range max='50000.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='MySales' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Calculation_954763124622024706]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 3]' />
            </column>
            <column caption='MyProfit' datatype='real' name='[Calculation_954763124622102531]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;return tabpy.query(&apos;PredictProfit&apos;,_arg1[0])[&apos;response&apos;][0]&quot;, [Calculation_954763124622024706])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Profit Indicator' datatype='string' name='[Calculation_954763124746903559]' role='measure' type='nominal'>
              <calculation class='tableau' formula='If [Calculation_954763124622102531] &lt;0 then &apos;Red&apos;&#13;&#10;ELSEIF [Calculation_954763124622102531] &gt;= 0 and [Calculation_954763124622102531] &lt;100 then &apos;Grey&apos;&#13;&#10;ELSEIF [Calculation_954763124622102531] &gt;= 100 and [Calculation_954763124622102531] &lt;5000 then &apos;Green&apos;&#13;&#10;Else &apos;Gold&apos;&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Profit Message' datatype='string' name='[Profit Indicator (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='If [Calculation_954763124622102531] &lt;0 then &apos;You are losing money :(&apos;&#13;&#10;ELSEIF [Calculation_954763124622102531] &gt;= 0 and [Calculation_954763124622102531] &lt;100 then &apos;You need to sell more ...&apos;&#13;&#10;ELSEIF [Calculation_954763124622102531] &gt;= 100 and [Calculation_954763124622102531] &lt;5000 then &apos;Great work! You are making money.&apos;&#13;&#10;Else &apos;You are a top performer!!&apos;&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Calculation_954763124622024706]' derivation='Attribute' name='[attr:Calculation_954763124622024706:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_954763124622102531]' derivation='User' name='[usr:Calculation_954763124622102531:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-field='' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_954763124746903559]' derivation='User' name='[usr:Calculation_954763124746903559:nk:3]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[Sample - Superstore].[Calculation_954763124622102531]' ordering-field='' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Profit Indicator (copy)]' derivation='User' name='[usr:Profit Indicator (copy):nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[Sample - Superstore].[Calculation_954763124622102531]' ordering-field='' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Sample - Superstore].[attr:Calculation_954763124622024706:qk]' field-type='quantitative' max='35000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[Sample - Superstore].[usr:Calculation_954763124622102531:ok:1]' value='213' />
            <format attr='height' field='[Sample - Superstore].[usr:Calculation_954763124622102531:ok:1]' value='222' />
            <format attr='text-format' field='[Sample - Superstore].[usr:Calculation_954763124622102531:ok:1]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[Sample - Superstore].[usr:Calculation_954763124622102531:ok:1]' value='false' />
            <format attr='font-family' field='[Sample - Superstore].[attr:Calculation_954763124622024706:qk]' value='Tableau Bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
            <format attr='font-family' value='Tableau Book' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Superstore].[usr:Calculation_954763124746903559:nk:3]' />
              <lod column='[Sample - Superstore].[usr:Profit Indicator (copy):nk:1]' />
              <text column='[Sample - Superstore].[usr:Calculation_954763124622102531:ok:1]' />
              <text column='[Sample - Superstore].[attr:Calculation_954763124622024706:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontalignment='0'>Estimated profit: &#10;&lt;</run>
                <run fontalignment='0'>[Sample - Superstore].[usr:Calculation_954763124622102531:ok:1]</run>
                <run fontalignment='0'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-family' value='Tableau Bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[usr:Calculation_954763124622102531:ok:1]</rows>
        <cols>[Sample - Superstore].[attr:Calculation_954763124622024706:qk]</cols>
      </table>
      <simple-id uuid='{DF454D9B-A79F-4171-9A19-507C0EC16BB0}' />
    </worksheet>
    <worksheet name='What If Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run>What if Sales and Predicted Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Enter Sales' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='6354.0495247623803'>
              <calculation class='tableau' formula='6354.0495247623803' />
              <range max='50000.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='MySales' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Calculation_954763124622024706]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 3]' />
            </column>
            <column caption='MyProfit' datatype='real' name='[Calculation_954763124622102531]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;return tabpy.query(&apos;PredictProfit&apos;,_arg1[0])[&apos;response&apos;][0]&quot;, [Calculation_954763124622024706])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='My Sales' datatype='string' name='[Calculation_954763124742537220]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;My Sales:   &quot; + STR([Calculation_954763124622024706])' />
            </column>
            <column caption='My Predicted Profit' datatype='string' name='[Calculation_954763124742791173]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;Predicted Profit&apos;' />
            </column>
            <column-instance column='[Calculation_954763124742537220]' derivation='None' name='[none:Calculation_954763124742537220:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_954763124742791173]' derivation='None' name='[none:Calculation_954763124742791173:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_954763124622102531]' derivation='User' name='[usr:Calculation_954763124622102531:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[Sample - Superstore].[none:Calculation_954763124742537220:nk]' value='78' />
            <format attr='width' value='162' />
            <format attr='width' field='[Sample - Superstore].[none:Calculation_954763124742791173:nk]' value='298' />
            <format attr='text-format' field='[Sample - Superstore].[usr:Calculation_954763124622102531:ok]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[Sample - Superstore].[none:Calculation_954763124742537220:nk]' value='148' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[Sample - Superstore].[usr:Calculation_954763124622102531:ok]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Sample - Superstore].[usr:Calculation_954763124622102531:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[none:Calculation_954763124742537220:nk]</rows>
        <cols>[Sample - Superstore].[none:Calculation_954763124742791173:nk]</cols>
      </table>
      <simple-id uuid='{23A3CDAC-CC62-4087-A3CB-4E2F7FC3DF9A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Sales and Profit Estimator'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='22'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='parameter-ctrl'>
          <format attr='font-family' value='Tableau Bold' />
          <format attr='font-size' value='15' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='font-size' value='14' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Enter Sales' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='6354.0495247623803'>
          <calculation class='tableau' formula='6354.0495247623803' />
          <range max='50000.0' min='1.0' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98736' id='12' param='vert' type='layout-flow' w='99184' x='408' y='632'>
            <zone h='5371' id='13' type='title' w='99184' x='408' y='632'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='93365' id='7' param='horz' type='layout-flow' w='99184' x='408' y='6003'>
              <zone h='93365' id='5' type='layout-basic' w='99184' x='408' y='6003'>
                <zone h='81201' id='3' name='Predicted Profit' w='99184' x='408' y='18167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='12164' id='8' mode='slider' param='[Parameters].[Parameter 3]' type='paramctrl' w='99184' x='408' y='6003'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontname='Tableau Bold' fontsize='22'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98736' id='19' param='vert' type='layout-flow' w='99184' x='408' y='632'>
                <zone h='5371' id='13' type='title' w='99184' x='408' y='632'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11788' id='8' mode='type_in' param='[Parameters].[Parameter 3]' type='paramctrl' w='99184' x='408' y='6003'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='81577' id='3' is-fixed='true' name='Predicted Profit' w='99184' x='408' y='17791'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{877C6198-38B1-4EB3-AD5A-6386AFE88B6D}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='dashboard' maximized='true' name='Sales and Profit Estimator'>
      <viewpoints>
        <viewpoint name='Predicted Profit' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C8AA7181-8C59-4358-B48E-AE5A57CD3E30}' />
    </window>
    <window class='worksheet' name='Base Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{96AA7538-8278-4555-8085-8808A9863682}' />
    </window>
    <window class='worksheet' name='Predicted Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 3]' type='parameter' />
            <card pane-specification-id='0' param='[Sample - Superstore].[usr:Calculation_954763124746903559:nk:3]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[usr:Calculation_954763124622102531:ok:1]</field>
            <field>[Sample - Superstore].[usr:Calculation_954763124622102531:ok]</field>
            <field>[Sample - Superstore].[usr:Calculation_954763124746903559:nk:2]</field>
            <field>[Sample - Superstore].[usr:Calculation_954763124746903559:nk:3]</field>
            <field>[Sample - Superstore].[usr:Profit Indicator (copy):nk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9495CE06-AAF5-40B8-B194-F9CA7A30D277}' />
    </window>
    <window class='worksheet' name='Customer Sales vs Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2C4E1C0-5D3F-4804-AB64-B38117A81A64}' />
    </window>
    <window class='worksheet' name='Check Results'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E2C3E7E-1111-4DC9-9C00-3606D0C6037A}' />
    </window>
    <window class='worksheet' name='CustomerName Fitted with LR'>
      <cards>
        <edge name='left'>
          <strip size='220'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[Sample - Superstore].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Customer Name:nk]</field>
            <field>[Sample - Superstore].[none:Profit:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{300DD64F-F67F-4731-8EDA-D3520D976E78}' />
    </window>
    <window class='worksheet' name='What If Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='type_in' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Calculation_954763124742537220:nk]</field>
            <field>[Sample - Superstore].[none:Calculation_954763124742791173:nk]</field>
            <field>[Sample - Superstore].[usr:Calculation_954763124622102531:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3AF8A0E1-E79F-4A80-AFC9-1ADCA39F826C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Base Table' width='192'>
      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
      i+9I5yg89Bq9ZzzQtdSScfdazp44wpQ2mAt7dzAWsZFNoSOcNcVh6umhpWuMlv27sX/7cRoO
      /J0udSwehnbaTRrmihfZWapjTrCSQnkM//2l2z/6q32N4ubmhslkor+/n9TUVGQyGbW1tURE
      RDAxMTGtrZ+fnzQp/Pz80Ol0kqdULpczOTnJwMAA2dnZxMXFMXv27GvacuTq6srU1BQ6nY6U
      lBTkcjnz58+/Yp/9/Pzo6+ujtraW6OhodDodCQkJeHp6olAo0Ov1aLVa1Go1oaGhkkrkVTzB
      dk6frmZyqAPBMcLpC+9Iu5Opcfdww9cvGOPoAAKweMNWPvuZu3DDPu00ccnprFixguTYUADm
      JoZR19iCfVY8Gn0XDU19zJsbhUbjipubO4GztPQPG1AoPfnMQ1/mzpuWMTahp66pnS987dts
      27weV8X19Px3lj7csmWLVN1gdHSU1tZWqbblv2Kz2bBarVJd/HfeLBqNhq9+9avcdNNNNDU1
      STfBtYqbmxtbt25Fr9dz4MABKY/3SgiCgF6vR6VSSYldl8Yuk8mIj4/HZDKRk5NDX1+flFt8
      xQlgNQzRbgAPmZXw2YmcPVXCpaDT5sqTDOONv5cLjve4F0NjZpOamkr0W2qTEbPn0VSwD7fw
      hYSpDFQOQZS3gpwjxUTGRKPkyqGtnm5qysvKuFhdw9R1Zqk1mUxMTEwQHh6Ot7c3w8PDyGQy
      srOzqa+vp7q6Gr1ez9TUFO3t7aSmppKSkkJbWxtBQUG0t7djNBql/fPg4CAymQylUnlNP/3B
      maE4Pj5OWFgYvr6+VyzjYjAYMJlMjI2NkZCQIKVJXhq7yWRCEATUajUZGRmsX78eV1dXgoKC
      gKtsgSxTk6zc/BnWLZuLDDuuB3KwuwWyMMmV+JQAzry2m0FtIksXBOPuO4vZggYUGhYvTJXO
      ERSdjNbH6W0LiJqDxtsLj4AgEuNiSU+NxyVYj74TtBo3Nt+cydGS08TPW0qwnxvmefPxUILC
      L5K5uLI4+jPs2rWfRpUCpSz047jW1yxyuZy6ujqqqqrIzMwkLi5OErkOCgpi3rx57Nq1i3Xr
      1rFmzRqKiooAWL16NX5+fpw+fZqTJ0+yatUq1Go11dXVVFRUEBERQUDAte1Vl8lk1NfXS55u
      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
      pIfkvwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Check Results' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Customer Sales vs Profit' width='192'>
      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
      /wdiipmq9b2oIAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='CustomerName Fitted with LR' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29eXxdV3n3+117OJPmebYtWbYsy7MzQRLHIUAwQyAhCSRAgJdA6Qv3try0
      ZWi5tKVQ6G1LbykvwwsEGqZACAQCYUpCBkicyYMsy5JsWR40j0c60z57WPePI8myLdnS0bas
      Y+/v5+OPz+fsvZ+9tM969nrWWr/1LCGllHh4XKZoAJ4PeFyuaFMfIpHIkt7YcRySySSBQGDe
      1xiGgd/vX/S9bdtGVdVF23EcBwBFURZty60yeXbOjZQSKeX0byYuVghk2zaJRIKsrKx5XxOL
      xQiFQou+t2VZaJp2/hPPg5sO4FaZlqMdVVURQiyL8kgpcRxn2pkW/8t5eGQwGeUAbjSBHh4z
      ySgHsG37YhfB4xIjoxzAw8NtMsoBvBDIw20yygG8EMjDbTLKATw83CajHMALgTzcJm0HkFIy
      Pj4+PbPmOA5yxjHHcZBy6rMEJNJxFiW78EIgD7dJe2ot3HeMFzt6aFhTT2ykD1tKgvkV1FaX
      0nX4EPGkjT+nkMhQD47jsKK+niMdXSiaxvatm9z8Gzw80iZtBwjlFaDJEwgEjuOgBUKMDA1S
      W11K1HDY0LSeA/sPoIVyWFOZx54Dh6hefwUT3R1YUoLj4DgOlmUt6L4LPX820rnvbEy1ZlOS
      iMXgVpmWox03cKs8U7amfru0HcCyobS8nKH+HhrWrsVKTKD4HMbCYVRsxifCKIEszESUoaFR
      KleuIDw0gGlZaELgKAqKoixI35FMJpeVzsXTAs3PznLTAgkhFq8FCmZlExkborZ+LTgmY3HJ
      6ppiwmMR1jU2MjoaYd3a1axdvRKRXUpNVRVluSqrVq9lcY/Cw8M9MkoN6pYc2msBltbOcmsB
      MlYN6o0CebhNRjmAh4fbZJQDeBNhHm6TUQ7ghUAebpNRDuDh4TYZ5QBeCOThNhnlAF4I5OE2
      GeUAHh5usygHWOo5NC8E8nCbtB3AMqL88U9/4kRPP6NDfRxqbWU0EgcgGh6mpaWF8ViS3pPH
      aG07jOM4HG5r5djJ3rQL64VAHm6T9tzy+GAvBAuoqijlYHMztbUr6OruoaBhNZ3He9nQtI6W
      ljZQFFaVhjh48CBZxSuJDB3DqSqftrPQVsStVsfN1mu5lWm52XHLlps2Fq0GLahaTeHYPvbu
      byHHr9LTN4Dfl8raJhQBQoB0EIqGpmkkDYNcXUMIgQPISTn0QuWybkmPF6tNmVkWN7RAbpbJ
      szM3Uwu4pkjbAWITo/QPh6msWoFftYgmLLKzdA61tVNelEdLSyulNauIDHXTfmKUpk0b6Wg9
      hB7KQRMCe1IOvdC43q38kG7YmfpB3HAAt8q0HO0oirLoyutmeWaK4RalBg2Hw+Tl5Z0y7tgk
      TQe/Xz/vtV5u0NNZjirOy0ENuiiLMys/gFBU/P4LN1LjjQJ5uE1GzQN4o0AebpNRDuDh4TYZ
      5QBeCOThNhnlAF4I5OE2GeUAHh5uk1EO4IVAHm6TUQ7ghUAebpNRDuDh4TaLSo47OjqCbTtY
      pkkymcSafENLKTFNk1QGRBvTsgCJZZnYi9DyeCGQh9uknxy3t4s9RwdoWF2HX5iMDg8wIXPZ
      1lTH0Y5WTEegBnOJjvQhpKRyVS1Hj55EKCLt5LheCORxLqSUyPAJUDSU3Mp5XZO2A2QVFKEc
      PonjSIorKxgcHGLD+loAYknJhqZ1qeS4wezJ5Lhti06Ou9wSv3rJcednxw3mUx4ZPknie7eB
      6iN4z88hWDinrUXLoU3LoaikhOGBXiqLs7DVLHwCRkdH0YTD6OgIaiibZCxC/8AwVatWMjbQ
      h2nZaSfH1TRtWQm9PDHc/OwslRjO0X2g+hBaAFXzIWY5/8zkuGn/hcGsHMxYB2vWbURKydo1
      tUhpMRGJ09DYSE/vAA31dSTjE4zHLEqL88kaGkQLpZ8c1623iceliZJbSdZ7f4kQKiKYP69r
      Mio5rieHzkw7y1kOnVHDoG5UNA+PmWRUjfJCIA+3ySgH8PBwm4xyAC8E8nCbjKpRXgjk4TYZ
      5QAeHm6TUQ7ghUAebpNRNcoLgTzcJqMcwMPDbdKXQzs2zfv2MDg6jmObHD1ymGjCBMA2Exw5
      chTTlkTGhjne3Y+Ukr6e4wyHI+kX1guBPFwm7Ro1fLyDmJZLdkCno62NgtJytElrhw61U1FR
      THt7B0eO9eC3xug63sWY4eNk1xHS1V54IZCH26QtrihaUc/h3bvpOgGRiQn8Q/10G9C0bjVS
      qASDIWQygeb3U1CQx7GWo1St246MDacth7Zte1lJfT059PzsuIFb5ZmytWg5dCwyTjxp4U8k
      KC8tZiKewBfM5djx4+SFdFpaDpJTUk5ksJuWjgkaNjTR0XYA1edHn5EcdyECJ13Xl5XQyxPD
      zc/OchPDzZRDL0oNOjA4QGlJ6Snjjkl4PEF+fs55r/XUoKezHCvu8nIAE9n+K1B0tIZdadtz
      NTnuzMoPIBSd/PzzZ4b28FgwI50kfvO3IBSyyjci8mtcMZtRwyreKNClhRPuxtj9dZzxnvOf
      nFOBWrUddcU1iOwS18qw+DZuCfFGgS4tjGe+iNX+a5yRIwR3feHcJ+shQnd+x/UyZNQr1Y0t
      cjyWD1rdTkReNVrdzgVfK+0k0jYXX4ZFW1hCPAe4tNAb34je+MYFX+fER4n98J0IzU/obfcj
      fPMfSDmTjHIALwTyAJCxEWT4BFJRkYnxy8cBvBbAA0AprCN429cnE2BVLMqW5wAeGYcQAm3F
      Na7YyqhOsBcCebjNohwgkUi4VY554bUAHm6TdggUHenn+QOHqa+vx46PYVhQWllDQU6I3hNH
      GQ5HKCitIjrUQ8ywWNO4lo7WdrRAiA2Na9O6p+cAHm6ziD6ARAK5ubkMR0aQDkypiobDMZqa
      1tPSfBB0H411hTTvP0BZ/SYivUewpESmoQY1TdM1DY+nBl06O26w7NSg/pxCVtbEONJ+iPXr
      G/FpCi1tneQ21COQ2JaFUDUc2yYeS5CTn4cRj2NLiSIE0kuOexrLUcS2vMRwF0YNmvYvZ5sG
      3SdPUl5VQ2xijI4jXayqXUFb+xHqa1dw+EgXtWvWUFGSz2BcZe2atejGEIUlFWnf1AuBPNxm
      UXLoZDKJz+dL61pPDn06y/HNvdxbAOlYYJsIPThvO64mx0238qeL1wJ4TCGlQ/wXHyH6zZux
      +1vStpNR8wCeA3hMIx2cwVZkfAQnfCJtMxk1E+xNhHlMIRSN4K1fwxntQqu7IW07GeUAXgvg
      MRO1aDVq0epF2fBCII/LmoxyAC8E8nCbjHIArwXwcBvPATwuazLKAbwQyMNt0k+OKyUDA/0k
      zZRAyUwa2I6cPOYQjcaQEmzLJJ4wAImRiGNadtqF9VoAD7dJexh0rOcoB0+Msq5Oo6w4nxef
      /i0122+mOt/HkbZWFN2PpfiJjw2iK1BcVcOJkwMgLbZt3ZzWPT0H8HCbtB0gu6gUcaQbI2ly
      suswVStrp48lLNjQUMeB/QfQglnUV+ax50AH1euvYKK7I+3kuJ4cevF2nNEusE2U4jVLVh43
      WHZyaDNpkZufz8hQP3lZfkYH+lBkIUHbj09JhUdaVi5GJEx3b5IVq2sZ6j2JbdloQuB4cujT
      WAoRmxMdIv6jd4JlEHrXQ6iFtbOe53Z5lrMcOm2LwZxcNBzqGtaRFfRjr6rFRjAwMMKadY0M
      Do2wdnUFViJKxLApzM8hyz+K6q8i3UfhhUCLQ6g+RCAXzDhCC1zs4iwLFiWHXgyeHPp0lkrG
      LI0JcGxEMH/JyrPcWgDXskMvNV4LsHiE//yp6y8nMmoewHMAD7fJKAfwJsI83CajHMBrATzc
      xnMAj8uajHIALwTycJuMcgCvBfBwG88BPC5rFuUAtp2+sjMdvBDIw23S1wLFJ3jupf2sqqsn
      oFgMj4YpLKuhtDCH8eF+TvQOUbmyjuhwD+GYRUPDao60t6GH8qhbWZ3WPb0WYB44Nonf/RPS
      GCfw2s8saveUy4G0HSAyOoT0Z1NRVoKCjW3bhMNhSgtzON47SNP6dbS0HAJVo7Y0xMEDLeRW
      rCY20IUtq5BSTk9LLwQ3WoF07juXHVheZXIm+jAP/gwcC3vru1Aq0pOeu/mMpv4t1o5bEcBM
      W2k7QH7FKsrGD7K/uYXNTWuxHImcDokETL6thRAoioIjHYRQmFLCpfNgbNte9IOcwg07bsuo
      ZtqTkX7M5gfR1rwapbhh3jZETgX+HX+NjA3jGBMIIwJptgLL6Vm7bWfKVtpiuNj4KLv37Kdm
      RS0hzWYiZpCTX8TYyAgVxbl09w9TsaKWyFAPE3GLhoZ6DrcdQg/lUV+7Ii0xXDweJxicfx7I
      ucgEMVziiX/G3Ps91JqrCd3+zQXbMZ75IskXvom27g1n7cErzQR2717Usg0If/a8ypMul6wY
      LpRbwBXbtpGTc0pcJaVNSWEBuq5RUJLavKwo99TCi8amjeneDrh8+gB2z16c4Q5ETgVaw660
      bIhQMag+RNbZu6obz34Z86X70BrfRPB1/7zY4mY0i3KpmZUfQAgVXV9Uec7J5TIKlHjsH3GG
      2vG94sP4Nt6elg196zvR1t6MCBWddUzJmnKO0sUWdd5IYwK0IEJdXgLk5VWa83C5tABa45uw
      Dv0SbdW1adsQQiCyZ6/g+rZ3oTXsmtU5ZkNKidnyENgm+qY7U325BWD37CH+8IdQq68kdMt/
      LujaC4LjYI2MYLS1eQ6wHPFf8V78V7z3gtkXQpnTOWZDhk9g/P4fQDqolVtRS+bfKQeQ4z1g
      TOAMH15oUV1BSomMx0l2dhLf30yy8yhqdhb+DRsyywEulxBosUgpwRgHf86C39azIbLL0Opu
      RNoGSn7Ngq/XGnYR9OegFNYtuizzRVoWZk8vRmsriZYWZMLAt6ae4JYt5Lz5FrTJwZeMWhJ5
      OY0CLcaOc/AhjKf+Fd+2e/C/8sMXrTzSmMAWOqruv+CjQFJKnPFxjNZDJFpaMHt70YpLCGze
      hH/NGrTiolPneUsiL22cseNgxnBGOi9aGazul4k//CFExVay3vLlC3IPx0hidnURb96P2dkF
      QuBvWEv2q29Cr6xEzGNEJqMcwAuB5of/mj9PxepV2y5aGeRELxgTSBedUNo29sgI8f37MVoP
      4YTH0aurCGzeTO6uXSgLiCam8EKgRXAxQiBpJkju+S5KYS3a6lchhEAaEdB8CNW3oL9NmgnA
      QehnZ9pY7DOSyQhW1x+hqAEttwxgQZvZwWS4Eo2SPHyE+N59mCdOoBYWEFjXQGDDRtSSYsQC
      n70XAmU41tEnSf7xP8CfS/a9r8AeO0b8oQ+gFK8leNvX5m1HGhFiP7wbacYJ3fV9lFkmzNJF
      JsaJfv9tIB38t36N6P23goSsdzyACOSd+9pkErO/n8SevRiHDiEl+OtXE7jqCvLvfjuKyxsz
      LsoB3Hojz5fLOQSyh4+AGUct34hauQ2ltBG0ADIygIyP4Qx1gG2BOPsndcInMZt/grZuF2rx
      WgCkGcMZ7wHbRCbC4KYDJCPIiT5AwkTf5OeU053pAFJK7JFRjLY2Es3NWH396DXV+BsbKbxh
      B2pe6nzLslBcaLXPJO0QKDLcy/Mtnaypr8cvkoyMTaCH8lm9spKeY0cYmYiRX1xBZKiHRNKi
      fl0DHYfaUf1BNjWtu6RCICEEVtujyMgA+ta7EerC31LmxABitBO1ajtCPb3z5sRGiX77DWBG
      Cd31AGrpulPHooNEv/k6kDahd/wImV931t8W++kHsbueQV11PaFbvzL9vd3fgrSTqBVbzmpd
      F/uM7N79gESWNCEGDwISpXxTKmRLmiRPniD+4kskjxxB+HwEmprwN61PdV4nwxM3yzOFayGQ
      MmkgOyuL/NxSkonDWFrqu5GJBE1N62lpbgHdT+PqEvY3H6Bi7RYmeg5jSYlMIzmubdtLkkB2
      vkwrChNjJH73abDiUFiPsuKahRlKRjEe+V/Ivr3oOz6GtvmuM05QEKEiZELD0YLImWUXPkRO
      BTI5gaMEkLP8bU50OHVqxdbTjxWlJrRmW9h0rmckwydwWn+G0vBGRMEc+UVL1k/bUUrWY4+O
      Yj37LImWg5g9PaiVlYSuuoqsXa9DzHip2VLCLPdddslx9WAuK6or6Oo8TEG2H19+OatK8jEM
      A4GDmUwiNB+ObRGNRMkvKiQeiWA7DmqayXEXev5cuN4CZBWgNexCjnejlTcuqKm2h9qJP3gv
      Mj4KgJpVeHbZtDyy7n4AHCuV2/PMY+94IJXuMJA7698WevN/4gy2o6585by1OLPZccaOYx74
      CXbPXuzul9BGjxF803/Mer2TSJDsPEp8/37Mri6ErhNYv56c190851t+oeVJB9eS40pp09vT
      zZqGJux4mImRAQaEzcjwGGtW13K06ySr16whPjbISNSifnUVJ48fJaei+pJLjisUDf91f0Hi
      N39HcvfX8d/wNwhlfj+wjA5PVv7J1mSGREFaCezul1Ky5XN0Hs+36kvJqUDJqZhXec6F8dxX
      sVp/jsguRSlpOE2pKm0bq7+fREsLRush7PFxfLW1+DY0kXfLm1BcyOl6IVjUMKhpmuhpyj/T
      6QMkEgkCgcVnNb4Qw6DJPd/D+MM/gx4i+32/PW/y2SmkdLBPPI+x/0GEMU7w9f8yfa3xpy+R
      3P01RFYJ2ro34r/+I+eVNlzIJLvWkT9gPPslfFe9H23NzTiRCEZ7B4m9e7H6B1Bycwls3EBg
      /XrU4qJU3+hSXQ8ApF3502U5jwJJYwIAtWITzPK2Tu57AOvQI/h3fhy1rGn6eyEUtBXXQOUV
      aJpGcu/3sdoeRd94B9IyQPUho4OYzQ/iv+aDs67ukmYCpH3eliAlSfan1UmXUuJEhhA1dxJr
      SWD87F8RQsFXv5qsG3eiV1e7PkS5FHjzAC7h2/4e1NJ1KGUbZy2n2fwgzmArZvODyMQ4avX2
      WSui2fxjnKEO7J49iOwyQu98EOvQoyiFtTA5YSXNOMmX70cprEUE8jAe/ywyGSH09u9CcPbh
      TLvvALGf/hlqaSPBW782rxBNOg72yAhGayvxPS+TPPgYis8g5y3/k+wPfhAlJ3tZ/ybzYXYH
      kJInnnqKnTuu5w9PPcONN+xY4mLNznJ92NKIgKqj1e2c8xz/zo9hdf4Bu/NJzOYf49/xN/i2
      30Ny7w+w2n6FvuNjULEBZmxcIXLKUfKq8b/yQ6fuZSZIvvANkru/BkIF6QAShJoaz5/DAWR0
      EBLjOKPHQNrA7A7gxGIkO48S27cP69gxlKws/I2N5N12G1ZtF9JOErz+tQue1V2uzOoAe577
      Az/96cMc6+ykpiG9rAIXguUYAjkjnSR+8j5EbhWhO+5DaP5Zz9Oqr0CrvoJ4fAxnog+Rnaqo
      ZvODOENtqF1PQsUGlIJVOH0HEPkr8F//0bNaieTzXyP5/P8BzY+26nqsE8+jFKzCv+OvUIob
      5szVpNbuIHjb11FyK0+zKS0Ls7cP42ALiYOtyHgC3+o6Aps3EXjrbSgz+lx69RcX+7iWHWc7
      gJRoOSXsuvFaoqZAV5dP8rjl2ALI2EhqFEdKsJMwhwNIKSERJnDT32HV7UQtrgfAv/PjWEef
      Qm16KwBq5Vas1keQY8dIPvtfaLd/6zQ7IrsctAD65rcT2PFXyPgY6ME5HW/6OkVFW/mK1Mxr
      OEziYCtGaytmdw9aSQmBTRspuOddqIWF051XRdMwXvgGdudT+F/z96hLqOdfKmZtAfr7Bwjk
      l/La665bVpVuuZTFiY1g9+wBoWJ3v4zv2r9Aq9uJ8Odg9+zF6nwSpbwJp68FfcvdKNklWAcf
      JvHE51CK6nH6DyBCxWS95xG0mivRaq6cnuSZkhCIUDFa45um72kPHQYzhr7pDrT6mxDBgtQB
      fzYYEZzEeGrFVcVWnHAf5v4fp6QPJetwDAPz2HES+/djdHYihMDf2Ej2q16FXnVu2bC57wHk
      RC921x8vHwfQzHF++osnOXb0KBV167l5x1VLXa5ZuVgh0NTbG38OQlFJ/PoT2Mf+OH1cKViV
      kv6uuhbjD1/AGTx06mIh8F31fowXvpnS6PftT32dVQyTHVF7+AhObAxZ2oDvqvejVmxCqdiM
      MlnJndgIsR+9C5IxQnf/ELW0cdp84refwjr8OMIXQkYH0Xf+LQx1kHjppzjP7sXJuhqr5ygi
      uo/A+rUU/fnnUHPOmEw7B4FXfxr7xAvoM5zxUuJsBxCCnTe/meKSMtq6elizevl4/cVqAay2
      X5H4/T+gN76JwE2fSqUaEQr4c8EycEa7SL7wDXgxFa6I7DKkGQdjHPPQr1CrtiFjQ6cbFQog
      kPExYj+6BxJhklklhN7232d1poXmR8kuRcbDZ+3x5YweAzOKIwNYY9kkHt2NYwQRXE/wyhsI
      XHkdDO0m8dtHwY6iBM8dKp2Jtuo6tFXXnfc8aSdJ/PoT4NgEdn3hvCHZcmHOYdAnn32Z973v
      Hr51/4/5nx/4H0tZpmWHM96benuPHUdaCZzhDlB0Ard8CeOP/x+y+8XUiTLVQkljAsxY6vP4
      SRKP/SOcMf/tDHVgtT2KWnMlSnYZTmJ8sj8RhrzT190KXxahu36QkjtMOoA0TczeXkzxahIn
      VJSSRvwbGwhsaCJQXY554AcoxXlopaVQcBO+8AdRShogjTmA+SDD3VjtvwUkzthx1PNsxL1c
      mNMBNqyp5scP/oxX7njVrMctM8nBgy1Ur1pDTshHODxOcXExAEYiSk/vIBVVVRiRMcIxk6qK
      Mvp7u9FDeZQUnlsTvtzwbXsXSl4lSl4NMhlNDTdqPpAO+sbbSU45wBRmLJV3J1SUkgaP96Ct
      vhF7sA053oNauwP72LMkfvu3aKtfRejt38Mc7ECxEyT3P4B87n8TvPlziGB+SsjmWEgZwInF
      SR5txmh5GbNnEDU3gBj5Dbk3Xk/wDR9DKCqWZWF3Pkby2S8jggVoq65D+LLSXhs8X0TBSvw7
      Pw7SRilafUHv5SZzOsCx4yfZev3NlBXPXlkjQz2MJaAxK4h0bEZGRqcdoOPw0dOS49aVZXGg
      uZm8yjWM9RylsCA3reS4biZsncuO038A48kvoDfegrbxjtSXio7Z8jD2sT/ie+X/jb7lbqz9
      P0aiIArXgBYEK44oXY8SKsLuehqlZB3a6p2pDanzVqCtuAaZGMceaEUoAvvYs6BnodTuQKp+
      REkjIjmOdfj3kIxiDXZiR3Qmvvt3WKMSpWob/k3b4MhX0JyThF77YZTSdRgPfx+7709IK4nU
      /EgpUVZei3bVn6EWr0UqPmQazyydZz2lYpUyJfGYsrOckuOeWe9mdQDbMsgrLGKwrwdFUSkt
      LjjrnLzylZSPx2k+0MK2LZvOOCrO/jSVL3cRYbybneDU5JV21o7p1pHHcXr3Ydom2sbbMQ/9
      Cjnem4r79SAipxxz7w9wRo9iHXkM37V/ib7xdsw99yP0EFrdjdgnduP07SfZtx/0EMF3PJiq
      AEKAULCOPAGOiVKxCb3ptqk/Djti4RS/h8Se54n81334129HL8vCX9VP1jtScw3mnlGs9t+g
      rXwFIreS4Fu/gcgpO234Vegh/K/4EEuBNGOpeTjf8hS7nY9ZHeAXP/4B+TX1HO7q41U7Z58F
      jk+M0d03wIqVdQwP9BIOj9HbP8DI8AjV5UW0HGyjclUd0aEeOvujNG3YwOG2Q/iz8lCFwBZi
      OnP0fFFV1ZX1t/boMeIPvheRVUzwli+ReOwfULLL8V35PuwTzwMgQoXYrT8n+dg/gm3iu/qD
      qDVXYx16BK1uB8mRTpzul1CMMGppI6ZQcbpfxClbj5JXncrIoAVRy5qI//Cu1EgR4PTuQ626
      An3bPajVOzCam0nsbyZ5/DiKYqCqXfhzm1Fz/WTf9c+gvC0lg56M/f3b341/+7uJP/oJrCOP
      Edj1ebRJ2zCpv3fhGc3HjkyME/v+neBYhO7+EUqocFY7YvK3Xmx5mOjFCZ9Arb5y3mrbs8o8
      +faf+ttmdYCIYWD29XG0fT9P7V7Djqu3nHVOKLeAK7dvJzs7lV24qLQCKR1KiorQNJX84nIA
      CnPqmerSrVu/Ia1Cu05iDBkbQsaGSfzu/8E+/iw2YB56BKwEAHbXM9hdz0xfktz91enP9rFn
      AYnsb8YZbEVb93q0I49jHfsjMjo0Wfn96E1vwRk9CokwzshRRLAYO+Yn8fJJKGhA8hS+2lpC
      V19F9m23Yj7y59g9LyNyC9DWvSHV4szxQzvhVOqTqeWGFwNpxpCRgVTnPxmFWRzAvZs5xH5y
      LzJ8gsAbv4i+5jWumJ3VAe5+9weQUnLbbbed03OnKv8UQihcgGWb0ywmjpTGBFbnkzjj3Sjr
      b0WEipGxIezjz546abLyz8PaqY+KhvH457C6nsZ3xfvwXfFekgWrwDFJvnw/TszCFo1YQzlY
      g4NoBWsI3fxegtuuRsnLA8vAPvkC5oGnsHv3gqLhv+lT6Gtee84SBN/4RZyhdtSaqxf8LNxC
      ySkn9LbvgnQQeent+jN/BEpeNXZ8NDWH4hKzVlc3mtALQbrNqDN2nNgD90yPxev5tQR2fZ74
      Qx+YHro8DUUDZ37L78zmB5GRfrAMkru/ilK2jWR3mPgLz2CP16CUrCR41U0Eskex9/8X+sZb
      8V+3IxXWCIHxwjdJ7v5Kal5AOqi1O9Dqz/92U7JLUWYsnrGOP4fxzH+gbbkbbf0t83swLqCW
      rV+aGwlB8C1fhmRs3mst5kNGyaHng7QMsBJI6aTiZqFiHX9uxkSUwHr2P7EVbfbKD6Dq83YA
      q+MxHIox+wsxI3nE/vuXKEoPWmCYQCVk3/Mf4MvCGWhF2f5zhC+b2APvREaHCL3tfkRuOWhB
      tPW3oNfdgFI+u5z6vOVo/y1O/wHsQ4/AEjrAUiJUHwSXUVqUpeZ8IZC0k8R+cm8qRYh00Na8
      Bt/muzAe/+zkGQKQyNEuzmnJjJ+jDCAtFSsSwgrnYMf9KLqFlhcntHocrawDtfP/iDsAABKX
      SURBVHILzrCC3bOH6HdvR/izkdFB/Nd/FL3pVpyJPjAiyEQYvek2tLobcfRsnAM/wnjuqwRe
      9benLZqZD74r3gu+LJQ1Ny/ousudjHKA874ZHRs53g3JCADWkSdQcqsm9e/Auav9nEhHYBvZ
      2PZqzN5xlNINKPYBfMW9qMEEQj1l1+kfxhnpJPt9vyX+y49in9iNnOxbWJ1PYrb/Bn39m9HX
      vAalbENqhCRUiGNZmAcewhlqx+p8csEOoOTXENjxUdcyJ1wuZJQDzIWMj2H37kMpWIla2oQV
      GQRSKcKTz/3vhduTIE0f5ngWVjgLx9RRc/341xSiBw+ir8jHHhyAZKqlEKEiZGx4+nq1ajuo
      OoGbPpVKStX2KFbH73Biw8jRowjNj3rD35x1X/+Nn8TuegZ9051zlEtiHngIjDD61nedlT/I
      Y+FkVG7QWCxGaJbsAvFf/AXW4cdSq6nmPZJzOtJWsCJBzHAOdiyAUB203Ch67gRKIDmj9Znx
      uFQfSsFKtNWvSq3QmkTkr0RofmRsiNCd/50aITEmkGYcc98P0da8BrX81H5p0oxjmwZa6Nyd
      O2eij+h9u8A2Cd7532izJL9ddE7P+BjoIWzcS0FzyS6KX2rOfIhObJjELz6C3X8g9cUCKr90
      wDH8mOFsrPFskAI1mEDPnyBYNYBQz+wgS/BlI3xZyEh/KhlVfBRUH75t94AWwNz3Q2SkHzl2
      bNpN7J49mI/9E0phLf6dH8d33UeQ8VGkYyMUFZmMpTrFsWGCt9+HWnRKfSttk8Tv/z51bNe/
      IEJFaA1vQMZHL4jYzO7ZS+ynf45ath7fm79y/gsuATLKAWAyl2TPHpyhdsyWn+FMVf7zXgfS
      1LAiIcxwDk7Cj+I30HKjhFZ1I3SL872kAjd+Ame4k+SL30wNfUoHZ/gw0rHwX/V+tOorMJ7/
      BvbRJ6evMZ7+d2R8FLu/Gf8rP0xy/49I7v4a+oa3ErjxE2AncSL9kAhjPPFZgrd9fXryS8ZG
      sNoeBTuJPdyBVrWd4M3/lPazOx9ObBiSEzjj3akHdhlwwR1AOg4JI0kwuPh8Pk50COOP30rF
      wXL2ta+n3dsW2LFg6i0fCSEUiZYTxV86jBo0EMrZP7LIKkktID8Dffu70da+Dru/Bfbcn1r+
      CAhf9vQaW7VyK/7rP0K8rzl1//gI0kzgu/LelBTZn4vV/huwEjjhk6nrg/n4r7wX4+l/S9k2
      YzApexDZpQRu+hQyHkYtP11vldr3agQRyE9bFnAmWt2NBG//FkpuJY5LNpc7F9YBpEPz3peJ
      JB22bW3i4IF2VH+AzRsaz3/tGdj9LTiP/K/U22mu20lwDB/WeBbWRDZOUkcNxdHzIvjLh1G0
      8ziNUNCb3pJadH4GauU27IGDGE98Dmxz+nultHE6XQmAWlRP1nt/id39EvGHPwyaD9+V905v
      SO2/8ZPYR59C3/z26Wv0zXel+gBFteA7NbsuhEBvunXWopr7H8B46l/RN99FYMdHz/13zROh
      KGg1qdV/zmUymnTBWwBd1/CrKrGhbkrr1p+WHNcwjGlB3MwsazMFVFOfnQM/gzMqv5QgbRU7
      EsIMZ2PHAwjNQs+NEqjqR/Enzw5rCutTYqjx42dPdmmBU3MNoaLU8UQYgOTL9yPDJ1IxvlAQ
      k+fZ3S8TDw+AP2+6jyKlivQXQyA/Fdo8/W/IV/4VEoFStB5Z2EhCSpRE4pRceNO7sBQFMx5H
      UZTp7+f6LEe7wUqQHO6CGXYglbFvtmvPfMbn+gyQTKZaOVVVp7NNLPTzTGb7fr72kskkqqrO
      6/xz/X0zz3cc58KOAkkpiYyPc7RtL768cpRgIUa4jw0bN+IscBTIOvE8sV9/Esb7sRN+rLEc
      rGgQaSto2TH0/ImzxuSn8WVPzw2IYCHq1nchJnoxm3909rmqbzq8OYVArdiM3bsXkVOO/xUf
      xnjmixAswHfl+9HXvX72ZFjtvyHxy4+CLyuVLvEc+T0XOsohzQR294uo5RtPs3shUyOma+ey
      HgWaGBsiJrJpWrOWvpNd5FfWpLUkQKu5Cln3UWI//TZCjKHnR8nbeQNEu7C7X2RqlndWktHp
      jzI+gt3+67l/kBnhDQB6CKWwDv9rP4P54n3oG25DKaxDXXUtUs9GaHPvgKitug6RndoeSDr2
      YpZCnIXQA/Naq+txbi6o6k0IQcWKOq7YuhlVEVStqKW0KH0hk37ltZR97j/J3gK+wjG0qrXT
      mRXOOcur6ojcSgCU4rXoO/5megHJVAWdQlv3epTSSYGXUAnc/DlCt36V5Iv3Ybb9CuvIE0S/
      /QbiP/vQue9JanxfJsLISD/OUDtSSpIHHsJ4/utI68xWxuNicMFbACGEK00XAJqGEipDLWvC
      Gu/G+NOXQKiIvBpk+MTc19lJ5HgvCAW1citKYe30ruUy0j99mlq1DavzKUimEt0ibewTu0k+
      /3WcgYMAJPf9IDVSI5RUa6HoOIlRRLDwrJZAhIoIvPrTyOjQdGYI44nPgmUgAnnoG+9wZSNr
      j/TJqKc/JdMOvPrT+K//KExmXwi99f/gv+FjzL7ecvI7oYCiYu5/gOTT/47/2r9MVdrgqeWe
      IlSMmFzUoVRuwXflveib355yEqGk8uGbMVA0grd8CeHPIfH4Z4h+82asQ4+cfWch0BvfhO+K
      9yJUX2qResPrATAe/yxO3/zmMDwuHBk1ETa9JVEgD33rO1Nv/0AuIrcKfcs7cCJ9qbSCM3Q5
      +HNSfQBpw+QIgIz04dvyeay2R7F7Xp7W/zvhkwRu+Gus7pfwbXknSk4qPArd+R1kfAyRX4M0
      Iih51ShlTUgmU6ZYCZzI2XMHZyIUjcCNnyTWfxBnqI3kvh8QKGtybRzfY+FcElqgmZiHf0/i
      15889aZ+85eRZpTEL/8a/NkEXv33UL4ZPacUs+VnJJsfxLf93TgDrUhjArPlp2gNuwi+9jPn
      LY/jOKlZ3kO/RClajbryFfMKacyO35N45C/Bl032vb9D+HOW5ejN5TAKlFEOMJ8dYlIzpKNY
      rb9IhRyTKf2cvmbwZ6MW1s35MJMv3ofx9L+B5id01w/Pq7dxHAdpjBP/9huRxjjBO749q0Dt
      rDJak5td59WgrXntdDLaxf7AMj6GLXS0wNzPVEqZ0iyZcXzb70Eos9/zcnGAjOoDzMdXhRAo
      oUJ829+Nvv6W6Qk1tWITSv5KnOjQnNfqG96KCBaClUTGxzAPPozx3Fcmd1SfA9WHyK9BhAqx
      2n9N9Ht3YvfsPXcZtQD+K+9FX3uza+ke7b5mIvftwnj4g0h77llcOd6N8eTnST7z7zgDra7c
      O5O55BwAUpNEMj521vfGk18g+q3XYR74yewXCoWpoU0ZHyXx+GdJPvtl7BO757yX0AKE7vg2
      We/5JXbvfpyBg1gzxHBLhYyPpVaZRfrPqZMS2WVo696IVv9qlMLMyeB2ocioTvB8FutLO0ns
      wf+BM9qF/7q/xGx+EH3dG/Btf3cqhYiVQM7VYVV1RP5KEApKYS36httwxo6hzNDuz0YqEayf
      wI2fwOp8En3Lmfv8Lgxn7ATJvd9Hb9iV2nNsHqirriV453eQwaJzJqYVqk7w5s/OefxyI6P6
      APPZKV6acaLffiMyOohauRW7+yWUkgay3vkTZCKM3X8Qyjej+WfvTEvLAMdE+LJnPQ4gHSv1
      xg0WAAtL7jUX8ee/hdPxawI3fQqz9ReYe7+PWn0VoTu+df6LZ+B1gs+Na1IIx0ry8p69VK2q
      pyQ/i97+YWqqU7OtyfgER4/3sqJ2NfHwIKNRk7qV1Zw81omeVUB5SXoJlObVB9CDhO74NjI2
      hMirwdz3A9RJyYAI5KGtfMU5181Ovc3PhfHYP2EeegTfjX+H7lIGBvvQI8jhdqyup1NbkA60
      om+4zRXbHnOTtgOMdB/F9BdQnJ9DPB4lHA5PO0D74S7WNtTT3tGB49hUF/rpONyBCBQx1nuS
      sjQdYL5vWiW/BvJT+ej8r/y/0rpXct8PU1uT7vhrrLZf4YwdJ/D6/xclqxgnMhlKzbJuIF30
      nZ+Ek8+hb3obSqgI7W33L9iGM3oMc+/3EY1vQi1fJln4ljkLdwApOd7VSVH5KvyD+zjU4bBx
      fQM+fUZlUBR0PaWqVHU/WdlZdJ48TvnalVjjKvakHNpxnAVlMbBt25WsB/O5r9n6CM7gIZKt
      v8Du+C2YMay+FpSV1+J7zWeRw+1QtgnbtueXtNexMH7/98hIP/5d/3LaDDSAKN+EUrkFh/S1
      +MkX78M+8CDOSCf+RS5pXOhvcy47buBWeaZsTUUTC3cAIVhRu5ro+AjhaJziUB7DA7309/eR
      k19ALDJBYU6QlpaDFJRXExnsprWzj8ZNG2hvPYgWCKEJga0oKMrCFl4nk8kli2/Fzo9jdT6B
      vulO7FXXISd60Vdeg9A0yC6C7FecpjM/H050DOfI78FKIEY70XJOT2noSoy77vUYw4fxbXjr
      om1dyn0AIYQ7E2HDw8MUFRWdMu5YRGMm2dnn30P2Qk2EzYdFZ05wrNSC+GAh8+0ESymx2n6F
      jA2jb77rrJQmy7Hzeqk6gGvrAWZWfkhpXbKzL9zI6kUasDoL47HPzOgEv3le1wgh0Ne94QKX
      zGOhXJITYRcaZzIZ7mmiO4+M5JKbCHMDq3sPxhOfRW96S2oPsBe+hcgpQ29KpYsPvu7z2INt
      iIrNS1IejwtHRjnAUrUAdtfTOIOHMFsfQSlYlUqvqAXR6m5EhAoRwXy0FVdftH2LPdzDc4BZ
      0LfcDUJFq9uBkleDWncjSl7VORe1z0RKiYwOppxlDrWlx/Igo6QQy2UUaIq5hkGTB36C8fjn
      0NffQuDVn17SMi0HO9KxUztlFtbhZFcu61EgrxN8AZCxEbANHBdniheKsfvrRL97O/bkWual
      xGr/NfGHP0zsoT9b8nsvlIxqnzPFAXzb3o1asQm1ZN1FK4PV+nOc0S6sY8+ili7RNkaTiNxK
      8OeiFNcv6X3TwQuBFsFCZoJnQ0qJ2fwjZHQYddt75lSoLoSpv83qfgn7xPP4ttw9777LbHbS
      RRoR0ALYkmUdAi3KoluFmi+Z0gLMFxkdxPjDv4BtEKjcBiuvcc22VrUdrWq7a/YWylQuVJZ5
      jtG0a68RGeO5PS3Ura4nqFoMjY6TW1hGZWkhowM9dA+MUF5TS3Som/G4RcO6NRw+dAgtlMva
      upVp3fNScwARKkTfcFtqxKi44WIX57IkbQdIRMeRmp/SkmJ0VaBrKr1jE1SWFtI9MEJTUyMt
      B1pB1aivzOVgczMF1euI9ndiTzZDjuPMmkT1XCz0/NmQUrpmZ+b/C0eg3/BxgLSexaxlio1g
      B7JBPfeahvPacfEZuTFf4lZ54HSFatpy6MLyGqqL47QcOEBVSR5jhqChbsXkSeK0DRYcx0FR
      NeSMbUmnFqsvNDZ0axG5W3bctLVYO3bffhIPfQBRVE/ojm+n8h1dxPIsZztTttKWQ8fGRznR
      08fKVfVMRMOAyuDwCAP9A6yoLOHgwTaqa+uJDPfQNZigqWk9h9vbCOQWoAqBPVmIhXYg3ZBD
      OI6DcJJYR59BLd+AklOeth03y7RYO04yktriNTaMIJXv/2KWZ8pOOi+6C1WeKTn0lK1FjQJF
      o9HTRnGkdHAcUNXzF/RijwLZe75D8pkvolZtJ3Tnd9Ky46YDuJIXSDqY3fvQcstRcisuenmm
      7Fyyo0BnVl4hFNQLmOXPzU6wkr8SfDkoF2CzuYuFEApK+UaUJRyZy3Qy6km56QBa/U1kr7gG
      9PMv3vG4dMkoB3BTDi2EAP/cqU88Lg88LZDHZY3nAB6XNRnlAEu1Iszj8iGjapTXAni4jecA
      57qfYxH/zd8S/eE7cSIDS3pvj6Xhsh0FmhdGBKvj92BGcQbbULJLl/b+HhectGuUlJKuzsNM
      RBMkEzF6+/qxnUlxmGPR3z+AI8GIRxkeGwck42MjRONG2oVd8hAokEfgdZ/Dv/PjqCuuPv/5
      HhlH+slxT3TQM26TV2jgJG2CPsHBtk42Nq6mvbWVguJi2g4fxYiGyQuoJOJFDI8lsI0TbNmS
      XjqRpXYAIQR6/U1Lek+PpSVtNWhBSSX2sT2MjGWzoryQ/fvbKK5JadpNqVBaWsZA3wH0QJCq
      yjz2HOikev0VTHR3YEkJaSTHBZYsOe58mHJIN+S+biajXW523OBCJcdNWwwXHR9lf2s7fn+Q
      qrJCTMtmPGpRmJ9FNDyC0Hw4aoDY2CCaIimpWsGJE/2AzdYtm3Au0AYZ82G5LImcyXLI5nCh
      7FySYrhQTj7lpSVU16xESBsjaVJR6WNoeJy6teuIxxMEgyGc6jJMWxLw6+RmZ6Oo+qzbWc+3
      8B4ebvL/Az0V+BVYjcs9AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Predicted Profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales and Profit Estimator' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO3dd3gU1cLH8e/2bLLpPaGlEVqogdA7KlU6KoggIgIWVCzXQpFrv7aLYsGr
      CIgUAem9GSB0QkgPIb33vn3eP4LBiL42pO35PA/PQ3Zmzpw5u7+dMzNnZ2SSJEkIgo2S3+wK
      CMLNJAIg2DQRAMGmiQAINk0EQLBp1yUAJQXZnDl7DoPlepT211hNes6eOU1uUdk/swJJwlBb
      xbmzZ8jIKUSyWrFYLNyIk2iSJGGxWLBaxQm76032y9OgkiSRHHOSNes3k1tYhm+TFgwfM56I
      9i1/s5Dda5ex+JMNbN51CB/dP17nX2UszWTIyPFMf+4dpo3u3/D6no3fsGFXJAAqtZaO3Xoy
      +b4J6OyUf6r8yoJ0pj40nZySaoZPmUt7XTFvfL6RFZv20NbXnvVrvsa/dU96h7dttJyprowX
      n32OCuPV1zQOnrz93pvofqMKMScPcy65hMkPjkMFlOXEM+reqQyZ/jQL5k7+U/X+NUf3byOn
      RsPEe+9C9rdLu71dswcoSrvAzNlPUlSnpFvXLpirC9i5/8jNqNt1UZiXSXRsCh27dqNlgA+r
      P/+ARe99wZ/94j55ZDe5FXLW7TzAgiem0nf4fSz/4lMCPO2RrGY2ffcNJ6ITr1nOajEReyEa
      k1JH9+7d6d69O93CO6L8fz55sWciWb1uC+Yrfzt6tODj5cuZNmbIn6v0bzhxaCebdh5E7E/g
      mu+gpLgL1JpkzH76BcKaOgFgMtW/FQnnjrF+8w6y8wpx8fRj6sMzCQtp2mh5SZI48+Mevtu0
      HYOk4t6JDzKkV2es5jrWr/yKI6cuIFfZ0aXnIKY/cG9DAs2GatZ8s4LTF2IxmGV06TWI6Q+M
      RW4o47kXXiKsxyAqshJJSMtjxKSHGDmwO1aTnu9Xf83BqPN4e3lgMv/GW6p0YPK06bhqVFCV
      zw8nj2O2zubNfz2GX5d7CbArY//FYt54+UkSo6NY+e0GSqr0dOszhKn3j+HSuUMsW7UFq1XP
      v//1DL3uGksnbyufrdnBv99bygevP09OmYGKH1aReGIXjzz9Kt3bNm9UhdadevDII5MavVZe
      mMXyL5aTnJ6Lk5sXI8bdh7w4nrU7Iqkq0zP3kUdoEz6AJybfxYrlnzBo0hyaeTnwyvMv4hLQ
      Dkt5DpdzSxg5dhJVOfEciTpHSKc+PDlzCjJTNatXruBMdBxGi4zw3oOZ/sAYtq3+hP0nE6g2
      K5n5yCP0vnsi08cPIebUYVav+4GKOjM9Bw5l8rjhKOUyFs9/lKbdxtJMVcTBhHLeeOmJv/I5
      u2Vdswdo074LTnZy5s18gHc/WkZscjpKpQKAi+fPgJ0z3bp1JTP+NP9a+Ba/7PanRh/hqRcW
      YefWBH9XFQuef4aY9EJO7tvEB1+uJbhtR9q1CiIhLr7RsvqqEs7GJNGqXScC/Fz4aunb7Dwa
      g2QxEnvxAlt+2IrSyQtzZR5Lly5Db4atq5bxn89W4RvQEk9XHdbf+Vq3WozkFxSjtXdAJoPk
      uAtE7t3Mgjc+JCEljcK0GB6bM49Ssx0dWgeyatnbvLd8Pc7uPgQ180UmKQnv0YPg5v6UlxQQ
      HROD0SIjrGMX7NUKfJsG0qNHDzxdHK5Zd9yZSJYtW8ayZcv4et0WAL7875vsO5lI14ju+Lk7
      kJB8Ge8mLQho4oVKoyOiRw/atAxAMhuJvRhNQXEFSBYSY2M4fPgwOg8/aosyeH3xItKK6vBx
      seO7Lz8mPrsMQ2UxZ2NTaNO+EwG+znz53zfZdSyOZkGt8PVwxt7JnR49ehDc3JeM+CjmPPU8
      dUpn2gQ3Yfl7i1n27Q4kICkumh/3bmLBm/8lMSX9z3y2bgvXBMC9eTtWr/qaoX27cmTXJqZN
      nsSyb3cAMHLiVLqGhWCxWPHx8aQ8J4+6Xyx/ZP8+1G5NGX73AAYMGYq7nYnI42fQau2RLEYu
      XojBIGmYNWt6o92Pg3sz5syahs5OgZOLBxq1nNy83IbpQ8dP4Yk5jzGwVxdMxjqsVokDBw/Q
      ud8oFr44n1nTp6BR/cYxvaGMeY/NYuK4sRyMzmDaQ1NRyuv7IImJKTy9+H2+/+p9jh7YS52d
      D++/+zpzn5rPAyP7s2v3bvwC29Cnazvkch2TZ8ygX0SHq2XLFIwcOwlXByVtu/RixowZBPl7
      XFOFksI8YmNjiY2NJfFSOgBarT3V5UXEJiTh3qQlD4y5h1YduhPRIRQ7nQdTZ8xg2MCev7pJ
      3Qffy9zZjzGgR3tcfYKZ/9zTTL1vNGChptaAvWcLHp85FXu1Amc3DzQKOTl5uYT3HkLbID9c
      fQN4eMYM+nQL4/D+vSjcQ3jnjUU89ey/GDMkgr27dzUc4CckJjN/yYes/9+7v96+t7FrukBW
      qxXf5q2Y/9JCnn5Oz5LnH2ft2rU8ev9dPDdnGoV4M7hfBGq16lcLNBiN6KuK+XbVSmRAi9Yd
      cXW0o2O/u1n2niOHIo9zbP9WNm/bzfcb1+HlqAHg3OEfePKVDxg6egx+Thrkst87PLOir9Pj
      4uTI7x7JKdR069EDFycXuvXoRXBzv4ZJg+6dzLh7+iADTCYTcpUdakV9gXZaLSaT8TcK/XP6
      DpvIi7Mad4FmPrOQpqE7OHXmDKu++IjI88l8+Z+X6ydKV/79xaPUswc38eTC/zL83jH4uNj9
      enteKd9kMqLSaFBemUertcNkrmw4Rhgy+kHG3N3rjjxgviYAh7as5FBsIf16RaBVmEnLKcDH
      rw2YqriUkkPXsXfTKqg58acP/2qB7duHYd0WRdvw3nRu1YLi/Czcm/hzfP9W4nJq6NV/CL6u
      Wv67cidVdaaGAFxKSkDh4EaPiK6UpMdh+d1Tfgpatgxhx4972L2/LXUFKRj/n2OABx6aVn8M
      8MtJSmXDG9ulWzesX23i/c9WEdHSg+93HCSi9/jffeNlcjlajYYzxw9ztLUvIa3D8HZzbDRP
      QXY6J06cqK+5UkPHzp34buVy7L1CGH7vWCw1JcQXFSEBWq2WqvJMtu/YR6ugAEJ8tL9Tg2sl
      JyWisnele0Q4xemxjbqHWq09uamx7D14hMCAQLp27cYX697k02/W0tbPnq17owgf8XBDaJRK
      1R354Ydf6QIFtWpHdV4yry9+hRdeeQ0H/7a8ueA5lBpXJj84jiNbv2XZivW4eXqiVNXnRy5X
      oFSpkMmg59BJzJ4yku1rlvPMs/NZtWEHZkmGs4szUQe388Jzz7Ji8yFmzHmKAM+r50wH3DOa
      po4WFi9cTHpRHTp7OxRyOSBDpVRe+T/IFQqUyvr1Tps9j2BPNW8seY2YSzlo1Crk8sZvlVyu
      uPIhv/YtVCpVKBSKhr9Dwgex8LnZHN22ipcWvUVw+BBefnrmz7bxaljkcjkqpRKZDGQKFTMe
      nUV1bgLPP/8CCZlFV1ciA5VSSdS+zcybN4958+bx/Mv/psYCOjsVa1d8xjPPPEtigYlnnpiF
      HBg4fDzhof68//oCVm7cA8hQKpUo5LL6/6tUP2sPZUN7yGT188lkMgYNG42fzsJrixaTWWpA
      Z2d3ZXkYPelBAtzVLH7lX2w7dJoOfUfywuMPsWfdlyx8/QPa9x/Fc7MfRNbQRnfu9dJrrgMI
      gi25c6MtCH+ACIBg00QABJsmAiDYNBEAwaaJAAg2rdGFsOK8TJIuZwGgc/GiQ9uQRjNLkoTJ
      aESl1vC7F2oBi9lI/MUYzAp72rYJRa1UNJoedWA79s060iGkyd/cDEH4axrtAc5F7uCLVd9z
      6dIlsnILsFosGI0mTEYjZrMFs76G6fdNILdKj1WSsFrM6A0GJElqmNdsMtVfdZSsLP33i2za
      e5TIfVs5dCoeSbJiMOgxGk1IwLnjh0hMz0eSJIxGAyZz/fA4q9WCXq/HbL6Jv7ARbMI1QyGC
      Wndi4sQJyBVKLp3ay7x3V9K+uRu5Fg+mDQwhu6iEf7/6MvPnP8snby6kUm+i04CxDGmpYtHn
      26G6gCUff0OQp4as7Dza3DWYSSMH4aDVcHzP96zdcYT8vAJeeuOjhnUe37OB5ev2IKFgyTvv
      8P3HS0gq1OPuH8KSV+ah+GUlBeE6ueYY4OShbbz44ot8tmozAP4hHVjy5gJK0tPpP3w8Tb08
      WPLOe9SknqJU7s6U+8ezd+tmLEBJaTmvf/Q5QV4OIFPy4uLXqcmMZtqDU4g8n0xgq/aEd+yI
      t7OKC3GXrqzRyvq1G7jr3gmE+tlxOCqasrJyXNy9GdC/N3JxoVr4B12zB4gYMJLnHp2AXK4g
      49yBxhNlMmSYKSkpw87ensryMtSOXsx+dCoy9DQLCSPA171+XquJ5LRcpj76BB72Szl9Ppa9
      57cw8KEXKcuKhYaxhjJ09naUV1QxYNgEHN196Nj8KSz6cl57+x26dF6Dm/2f+/miIPxRikWL
      Fi366Y/K0iKijkWyf/9+ErPK6dy6BSV6Gd06hJB6OY8B/XvjpJXx3brv6TdqMs7mQvYcOIKk
      dadjiD+ldTIiOl39TeyFqMOs/HYtJq0P06ZMxM1ByY4de3Hx9CIoNAyd3IBns1bcNaA7Px7Y
      Q2xSGu07hRMbdYDdh6Loe89oIjq2Qn6nDkUUbjoxGE6waeI6gGDTRAAEm/arATCbTYh7MAm2
      4JrTK/qaStZ8+TnB/UbRs30ISpmMqvIiYuKS8WkWRFAz3ytzSpSXFJKQmIK9iydtW4egkKyc
      OX2COqMV5Aq6dI3AQaOksiSf6LhkAluF0cTL9WfrqiD6Qiz+AaE08fWgtryIszEJAGid3Ona
      se0vqycI11Wjs0CSpY4nZs6k2iwjLycdz2ZtoeIyjz35Ak5u7iRcSiei8093RLCy+ssvKKs1
      snfTahKKoVOQC7NnPYdfYHOqqmoIbtkajVLGF+8t4buNP6Dzb0fYlWEPproKnnrsUWplWr75
      /GOCOvYmL+YQS7/dhbe7E0ZJRavgFje+RQSb0mgPIJlrycguoXdQK+579CmCPBxY+dFSOvQd
      RpuWwQS2avezuRU8PPcpqirLqctPplaSqCzIps7OicAWAYS2DsPZXkVhajTxpXb07hDUaMWZ
      8acoUvqz7PHZbFCVs3P/EUKVWbh5eRPSqi3tw9ohCP+0RscAcrUbr782n4S4aGbdP47DZ5Mo
      Ki4m63IySfEXmDnjEQqqrt4mpODyRRYsXMTB8+n06toBOxdfHnlgFMmxZ3l46hRScktZtWIF
      4x+YguIX5/Jrqqux1zkgl4GDTkd1VQ2tu/SmV/sgDmxZw6NPv4rRIg5EhH9W4z2AoRrnFh0Y
      PXEKqppMIqNO0y4ggKpKDx6aPolj+3aRV1xFcWoans1D0HoG8eFHS7lweDPvfPoVHy9+itHj
      xqNVSpyL3E9SXDRHTsaRkP8e+RkpOKR/zT19O6PBhHeT5pTnbaHGYCY9LZ3mLe/GzacFkzpE
      UJ7VnilzF1Jnkhru0SMI/4TGAbAa+PjtRaRlF+Dt689Tzz9AkIeSc4sW8+iswzSLGEFLT4np
      89/irY8/5sO3FlGslzCbrTw4bTZFWUl8tPxbDAY9Xq36M6hfP0YOGQjAp2+8gEe3CeRF7+WV
      z/aw/pv3mTigDXNmPYKTR1MWDe/L4Y3/Y+/xGPR6PZNnzsHJTpylFf5Zv3oleOPGTYwbN/ZX
      F7jw4zZSjD6MH9z1H6+cIPzTfjUA5eXluLi43Iz6CMINJcYCCTZNdLIFmyYCINg0EQDBpokA
      CDZNBECwaSIAgk0TARBsmgiAYNNEAASbJgIg2DQRAMGmiQAINk0EQLBpIgCCTRMBEGyaCIBg
      00QABJsmAiDYNBEAwaaJAAg2TQRAsGm3VAAqyksxXodHo2ZePEpUQu51qJFwp7saAEni87df
      Yt2ek/V/WkzMf2w6SbnlN6wyi+bNJDq95K8XIFnZ/t2XPP3SEha/8CRrth0CwGysYelbC5k4
      YQIPz3yMjOLaRosd2LKa6Q89yIQJE3n6X69RWmNEkiQenzqa8RMmMGHCBF5594uG+Y3VRTw4
      bjhPLvzgmioUZiQyZ+Y0Jk68j9VbDiABptoyJo26iwlXyvr0261/fRuF6+rqrRFlMsZOnMik
      Of9mxMD1pERuodQhhJZ+LkiSRHVlOXqThLu7K3KZjOrKchQaB7QaFdWV5Sg1DigwU2OwoLNT
      Ul1nwsXZEah/wnxleSkGkxVXNzdUSgUWs4nS0jLkSjVurs7IfvHoeYvZRElpKTonV+zt1ADU
      1VRRWV2Lo7ML9nYaqivLkRQaHB20AFTkJPDFD1Esef5JcpQBBHvWv/79l++TI/Nn9XcLqKss
      QWGvbrSuZq068eEnY3HUqvhwwVOs3RHJ7LFduJBu5MiPPzTeTUoSa75YSufe/TiWVEzjSRbe
      WvQyQx5awN2d/Zh6/wN07tIZH3MaNQ4t2f7dx9fjPROuo0b3BvVo0YFR4d6s2LCLs5tXMv+D
      b5BJErs3LOeLDYdwdVDg1LwT7y58hs/ffJGgoXMZ3TeMT19/jtCR8wiyJvGfHy5gX3QRZXB/
      Plr4JAC7vvuUr7Yex9PFAb9W3Xl13lTefvVZsioslBXm0mf0DOZOGdFQD0N1MfOfehqjWkdp
      aSWvv78Uu4pknnrpbfz8fdFLGpZ+9AFrPnsTo39fHp88vH5jNFpqijKJOh9Ls4hQQoIDANi5
      +wiPLPgPu3duJyC0Pe1aejZqhJDQNhQV5HM2JokLaSU8/XBbanLTqJFgy+YfaBIQTMewNqgU
      ckqzE9gfX8lb8wZwLGl/o3LM+grOp1bxet8OaOUwuGcYx05fpLtLISZTDT9s2Upwq3a0aRmA
      XCZu+nsraBQAmUzGI08+y9Chowm/dxZtmrhiMVWxdPlGVm3ZjqudjKenT+Rk4v2/WeC5Hw/w
      xvsfMbRP54bXLpw7T+feQ3jg3rvw8/EE5Dz2zL84e/YcBdmprN25s1EAju3aiH1wL16adi9n
      D3zPN+u3MyzQgr1PEI89PouggGZolfDo8283WreDZyBL33mVt95+l6/X7SR99rPMnjyMouJi
      9uzcRasWvix85lGm/+t9RvYO+9mSJj79zxtcTM2iaZtuNPdxQ2mWMf+xydTUVLFy6eusbtaT
      DxfM5b/vvc/spxegIPWabbdYatFjz0/39HVydiSvrAKf8I5MHWOgqryEt156kvBRjzLvoVF/
      4m0S/inXPCJJ5xFAjw6BDLr7HgCsllpMcmdc7VXIAH8fD0pKy36zwPDBoxjet0uj1+a+tITv
      169nyUvP4NAinLefm8yMaQ8zcMRYHORWoPGBb1FJMdHHz/NGbhwAHXreQ/dhgyi3bObrT98j
      Na+O/329HA9d464MQJvwvjwxswSatuOV2XMYP/YevDw8eHDW47TydiTYQ8G6g5G/CICaBe8u
      BUli3Wdv8MHydbw270EemDwZgPvGDaHHoIfJHtuBjUcuUqNaSl1ZHpfjc1j9w16mjL6rvjFV
      TuhkFZQbrbiqZRTkF+HVywvPpsFMnhwMwJCIUKYv/lYE4BZx7VkgmQy5Qo5cXj9JqXYnyMPA
      ht1HSbp4hh9jsunUJhCNRs3l1BSSYs9zMTnjaoEKxTVFnoyKolv/Ybww/0lSYs5TXVmCQeXO
      yGF346xV8cu7k3bo2Bl7J3fmPvUMT86ZScsAPxKiz+DkH8oz81/A2VxEQUUdCdEniUvJbFgu
      J/kc//1sBVn5xRTm5aDUOaNVKhg7ZigfvPshGZkZ7Np7iA4dwpAsenZu34PJKvHtis+JS7pE
      dlYG8UmXcXVz5fyxPazZvJvsnBy2rV9Li3bt8QzsxNZNa5kzZw5TJ47ALyiMu/p0JT8zhchT
      F1CqdQyKCGb5ig0kXjjF3tNpDOjenv1b17LjwFFysrPY8P0m2rXvgHBraPSMsJ+UFOYR0CYc
      b1cHZDI5vfv05sC274k8E8/c516mdXMvmge04ODOLeSUmWgTGkBIu8542MvRy+3p3DakUXk1
      ZQVsWL+OkxcvMffppwkJDMHeXMLG7Qdo2zkCR52O7l07UVyQT8v24YSEtsHX3szadRuIT82h
      U3g3fNzs2bVlE7sOHGHIuGn07dKKs8f2UmK2JzTAHwCtgxMF6Qls276TjKIaXnzpJZp6udCy
      fThUZLJ2ww+Edh/G1LGDSTqxi6WbjjNu+EAqCrPY8sMWDkVG0brH3Tw8aQTu7u4knInk+01b
      Maq9ePmFeTg76nB1dcXV1RUHjZxqScvAnl3ISLpAVHwuEZ3aEt69N7FR+zkYFcPjz79C6+Ze
      uLg4E3VoD1u278E9qDPzZk1Brbz2i0K48e7Iu0Of3rsZp453Eerl8JvzfLn0XYZOnoO/22/P
      I9z57sgA6GurkWvsUStuqet8wi3ojgyAIPxR4itSsGkiAIJNuyYABoOB3UfjWbrxJKsPxJNX
      of8bxUtUVNdhsV7/XtZ3W4+TUmJo9Nreo7Fkll99jvGRkwnEZFc21GX3j7FkljVe5lYVdTqB
      PRcLGr22+/B5Np/Jvkk1ujM1CoDVYuKdFYeplNsxrn9b2jd1Iq+05m8UL/Hx2kiK6qx/s5rX
      qqrWX/Mg7diUHErrzA1/B3g7smrPRUxWieL8Ig6mlOPrfO3Fs1uR3mCk1tj4AmGfbq0Z0s77
      JtXoztToSnBqShYmZw8m9AxEBvi56wCwmI0sWnmSCRH+rDiaxVsz+7DncAwnL5fi6KRj5sjO
      OCrMfL7xDHnVRlRqNY+M7kpsdCIJuZW8t/owzZt68/iwdgAciLyAxdWHu9p6svTbwzRp1ZIx
      4f58vSmK/gO6oKwu55v98dSZJSI6BTOiS1MORsZgdnQj7uIl2nVq01DnirJyPt2dyBPju6FW
      KrBTXT2/3qy5PwF2yUSmlJByPp6xgzqiksvIyipgxZXyu3cKYWSXJuw4eA7XFoH0CnJl2/6z
      eAQG0SOw/kmZVWXlfLI9hiq9CZ2jjrljulJbVMC6mBIC1QZS6tTMHRLM19vPk1WmJ6CFL9MG
      tUIprx/vc+JMAkdSK8Gop9oip1MLVy6mFuDg5s680R1JSclkw7HL6E0WgoOa8NDAlg3bYDYa
      +XjjKcbeE86luGSsrj4MDnHi1ZXHCfJzJiWrlJDQAB7qH0xebhFf743FIMlxUMq5/97uNHNS
      AXDqTCKHUivAqKfKLKdLgCsxqQVo3dx5dnQHqssrWb7jAqV1JoID/Jk6MJSkxDS2XyxCI5nJ
      Katj2ujutPFx4ODxOA4lFGKn1fLIqC5kX0ojrkrJQ32DqCgu4ZNDGbw04epQmFtZoz1Aflk1
      gX6uyJBYv/MU8z/ZzYaTmYBEfn4x++NLeGJMF7IvZxFXDoseHsCAQB2bTmSgUCgZf1dHnhrf
      jXB/Lfuic7inXxit/Zx4dkr/hg8/QICPM2eS8zHU1VIrU3M5oxCL0UBSkR5fnYIvd0QzYXg3
      Fk7tTcy5RFJK9NTWGdgWmUCHTqH0bukO1I8Y/WLreUb0a4uDSo6jvT2O2p9dYJLJmDg4jI07
      TpBtsadrc2eQLHy+9Rz3jYhg8UO9iT4TR0qpkZpaA3pT/Tduda2+4f8AGnt7po/owpPjI/CU
      GziRWoLFbCb6YhqFkj1T+7dk/9E4vAOas2RGf5SVxZzJrGxYXq834uruyrMP9MFLbsDFx4dX
      HupLaU4+lUbw9/Nk9piuPDEmnJSEy+RX1+/FJEli077zBLYKpKmrHXV6Q/1eQZIorTIwpFdb
      FkzuzpmL6RisVv637RxDB3Zm8bS+mGtrMP2s66k3GHF2d+XZyX3wVRpw9PbhlWn9KczMo9Ys
      8d3Os4R3a8uSh/tjLS3gSHIpRqMJ1HY8Nq4793b05nhCPqUFhRxKq2HB9P5M7OzNt0dSaBfi
      x8lzqegtEqdiM2kVePvspRrtAXRaDSUldYCMicO60exUHAlXuhQKlYbHRnfBXiXnaGoaqWm5
      LPxfKRaLBZ+mflSUV/LRhrN4uDlSXVGFT6DTb660SRMvSvdf5nKWM4EhzclPy+RyTgnuPp4o
      zUaqJTWBng6oZBDqpyPryvj9fhGtGRzm11DO5+siCQhqRlvf+mHXXt6uOKoaj7L08PYg1F1N
      WHgwCpkMTAYqJTsCPbQoZDJC/Z3IKqr+fxspJ7eIZbvj8fdwJK+wGp8r4fD282b64NbIZZBV
      WEliUhlnziWhNxjxqqwDnK+2rb0GpUKOWqXAWadBoZSjUcgAidPRKRxIKsXbWUtJrRnTla7d
      7iPRaHWO/GeoL78cO6pUKXHT2aExS8hlgMVEuUlBa38nZDIZv3YJxNFeg1L+Ux3sUCgUaJQy
      JCCz1MB9Aa4oFHLatfAgvqACN2dw0mmxUynQalRYayRyiyrJyS1i8VeHkawWtK7uaBx0hPtr
      iLpUwsmUYmZNaf//tuetpFEztWnpT1pSOrE5lUiShMlyte8uUymxV9XP7u2mo2kTbxZM78+S
      GQO4r2cLUtIKCAhpwbxxXenVMNxYhhyJihoj1p99G6nttPjbS+yKziUswIMgDy1bT6TRPtgH
      hUaNTmYktbAGo8FAYm4VTT3sAXCwa9x/f3RiH6ylhZxOrx+c16N9c9TyX35UZNiplah/6hop
      NTjJ9FwursNkNJKYU0kzTx1yuQy9wYzRaKK8xtiohAtJ2fTvFcbce7vQzv9qsLV2Kn5ana+7
      ju6dW/LajAEsmdGfiADXP/gWSJxIyGPm2B7MGNoeL52qYco9/TrQ01/NppOZ14yXuoZchafG
      wpHYPNJzSyisMv3B9ddr5q4hOq0Mi8XCxbRiWng7/+p8Xm46PD3dePmhfiyZMZBHBrdEJpNx
      d0QwW/efQ+bsjqdWgWS1UlhWy/U/+ru+GgVAY+/AC5PC2XbgHK98eYgfUyvo0MIVkOHhpG2Y
      LzikGWFuMhZ/dYg31hznYnYlrUP8KcjI4q3vTpBfY8HRTgnIGBoRzNebjvH1oeSrK5LJ6Brq
      Q1a5ieZudoQFe3OpoIYOzV2RyZU8Mrwj3+86xeKVx+jQuTUh7nbYazVo1Ve7N2qXIw0AAA2B
      SURBVI46O7R2auaM7cqByFjyq4ys2X6ShILGv/YCcHSww+5KeJEpmDWqM2u3n2ThN0fpFN6W
      YDc1Xds258jxGP675Tx6qfGxRET7AI6fiOWDTWcxyJTYqxUolEpcHDQN89zdpx0lWVm8+r9D
      fLjpLIXVVz+AdnZqdHbKhrpolPV1cXHSIpfJGdylBZ+ti2TlwSQcHbUo5WCnUeOgUTH+7i6U
      ZGVxIbsCrZ0Ge7UCZDLcnbTIZPzs/3JmjetOXlYux5KK0KoV/PwnB/Xl/bwO9RNdneyRy+D+
      YV04eyqOV786jNLDm74t3VCrVThp6wOp0ahw1Krw8vNhUJCOf684zGurjnL6cikAfk180Vn0
      9O7UAgCTvoY3voni75xDvBHEleA7SHxqHjpHHXXVVXyyPZZ/PzYYJ/U/f6nHarGQlV/KZzti
      WTCjP1rF7fNjn2t+DyDcvqxmE7uOJyIpFMwe3/2GfPgBTHW1bD+dwbRR4bfVhx/EHkCwcWIo
      hGDTRAAEm9YQAEmSsFj+/k2p7iSiTa51p7WJ2AP8DnGIdK07qU1EAASbJgIg2DQRAMGmiQAI
      Nk0EQLBpjYZCfHD4LS6XXrpZdbmjdfIPZ2bPuTe7GsIvNApAlaGS8rrfvu+n8NdVG///3xwI
      N4foAgk2TQRAsGkiAIJNEwEQbJoIgGDTRAAEmyYCINg0EQDBpokACDZNBECwaSIAgk0TARBs
      mgiAYNNEAG4gq9XCipNf8OHht9mbuLPRtLi8GAxmPSfSjxGbF/O7ZcXknsdsMf/qtJ3xWzGa
      /9iTcKxWC9+dW8nRy0f47uw3FNcUkVGa9oeWvROIWyPeQBISmeUZjGs/CXcHT05nRnE87Sg9
      WvRmzdlvCPEMpWuz7mhVWtadX01FXTlu9u4U1xRxf+ep7EncQWltCQND7mL58U/o3LQrg0OH
      svXiRro170ET56ZsvriezLIMBoQMxmDWs/bcKmqNNQxvO5qY3GjMVjOdm3Rld8I2/J2b4GTn
      zOGU/UwOn4az1pXtsZtJLIxnSvh0EgriGN/hfmSy2+t2h3+G2APcYAazntOZJ8iuyCQu7yJV
      hkpUChUtvVoxuv0EimsKKastJaM0je4telFeV4ZOraOouhBnrQsV+nIKqvII9AhmVLtxbI/d
      jEapYXvsZnYmbKVf8GC8dPUPqLBYLRTXFNEzoB+HUvYRn3+R5q4tiEr7kc5NupJWehkvRx+C
      PVvS0b8Ll4qTCfPrSPfmvQj1as3wNqNvcmv980QAbjCFTImPky8apR1ejj546rxILU5Bo9Rw
      JvMkVqn+jvpKuRJnOxfs1Q7YqbSU1ZVyNPUwCpmi/gEYMgXnsk/jrHXGKlnp3LQrDmoHzmef
      prS2pGF9FXXlnMk6gbuDB2qlhjY+Ybg7eBKdc5bSmmKc7JxQypWoFPXPXtBpHEkuSqSgKp/Y
      vAs3pY1uJNEFuoHkMgXjO96H3qTHQe1Apybh+Dj60sanHQazgfTSy3jqvNGqtDhrXfDUedEn
      sD9ymRxnrQsOagc0Sg3OWldae7clrzKXvkEDSciPxUXrireTLylFiYQ37Y5aocFg1mOvdiC8
      aXfa+rQjvTQNlVzJgJAhJBTE4mbvgaeDFyPajkGtUDOszSgC3YK5p/UI7JR2ONr99lN+7hQN
      d4eWJIlFu14kpTjpZtfpjtS1WQ+e7v/CDV2n2WomozSNII+Q61bmT7dGVCrvjO9O0QW6gynl
      yuv64b8TiQDcQJIkkVqcwtcnP6e0toSi6gL2Je2iuLqIGmMNuxO2sydxB3WmWrLKMtibuLNR
      fz6tJJV9STup1FdwqTiZQyn7qDNd+0go4Y8TAbiBjBYja8+tQi5TUFFXzjenvkQhV/L1qc/J
      KkvnUnEyHg4e1BprWXFqOTqNI3pT/VO2SmtK+PbsChzUjpTWlrD+3GpqjNVsvLDuJm/V7U0E
      4AZSKVQ0dwsguTABg1mPm707ZzJPUFCZR42xhsKqAvYk7iSjLI2yulJ2J2wjqzwDgOyKLCrq
      ytmVsJWi6kKQyUgsiCerLOMmb9Xt7c44krlNmCxGAtwCkQGRqYcYFHoPRdWFHEzei4eDJw92
      fZjtcZsxW0z4OPrQvUUfkgsTae4agKvWFV8nf9r7dSCjNI3RYeNJL02juLrwZm/WbU3sAW4g
      hVxJpaGS0tpSRoWNo7yunMvFl5gW8SgqhZqzWSfp6N+FLk0jGBI6jPzKXEa0HU1M7nk8dV70
      DuxHeV05d7UaTk5FNnpTHWM73HezN+u2Jk6D3iA/nQa1SlbyK/Pwc/a/2VX6S8RpUOFvkcvk
      t+2H/04kAiDYNBEAwaaJAAg2TQRAsGkiAIJNEwEQbJoIgGDTRAAEmyYCINg0EQDBpokACDZN
      BECwaY2G9PUM6Esr7zY3qy63HIn60Y/y63BjqCYuzf9+hYTrrtFwaKvVikKhuNl1umXcaUN/
      r4c7rU1EF0iwaSIAgk0TARBsmgiAYNNEAASb1uhQ3mq13qx63LJ+OushXHUntUmjACgUCuRy
      sVP4iSRJyGQy0SY/c6e1ScN1AEGwRdfEWJIkqqtrbkZdbojq6uqbXYVbhqGuBqPFtru9ikWL
      Fi366Q9JsrD3h/Vs2rGXFi3bUZwRx7frNqJ09MDP0w2QuHg6kvWbt+Pk2QSlsYyVK1dRUGUh
      JKApt/qTpGJPR7Li23UoHb3QGItZvmI1J87E0Sm8E0qZjNK8dL5ZuYqiOgj0c2P9tys5HXuZ
      1q1bcfLQdrbuOYJfi2CcHOyQJCuHd21i18EomgW1JO/SBdas34zayRNfT9ebvam/q6okjxX/
      +5LzqQV0DmtNemIMR87E0yokgPizR/lu41Z0Hn54udU/JCM66iAbtuzCzacZ5oo8Vq5aQ5VZ
      TRMPB75btZILKdm0bhWKQi5DX1XC6lUrScwoolXLQPZtXc/+o2cICA7FXqO6yVveWKM9gFRX
      QnRaKX369MbVQc2OPYeYPOUBDu7agRWwmg3s+/EskyeNYffOnRzet4teQ8dTkHCCgoo/9lTC
      myky6hSdInrSOsCXvOx0vAPa8OCUiaivJPfg7u30v/cBMs8d5njUMdS+bQhytXAs6hhRCUVM
      uKcH2/ccAqC2OJ2YHAMj+oaxa/+P7Nr3Iw9MnsSB3Tu5Hb5Tky+eQanzpn+/XsgsNcTGxpOS
      kQOSkd0HTjJ1ygR2b9+BJAGWGvZGXuTB+0awfdsu9u7YwbBJDxJ3bC/Hj0fiHhKOt7KC6ORs
      AM4eO0SLjv3Q1mZz/PhRLldqGNQ5kP2Rp2/uRv+KRgGQaT25u1cbjh7cz/mEy5jlSlydXVDL
      pPoAWPUo1I64uLiBRU9NbR2eHh64OOuo0xtv0ib8caNGjuBSzGm27TuGq3cztFINny39iNK6
      +jMaVVVGvLzccHPRUlBUgaenJx4eHpQVFaBzc8fd0xN9Tf39+Ouqq3Fx98DTw4Oq6iosCjVu
      Li6osNwWAQiL6I+TxsSWdWsoM6i5Z0if+j24VQ9qJ5xdPJFbapEAjLUodK44u3siGWqorrPi
      5e6Mq6OSopIqPD09cXd3o7a2vm2qqmvq287dhaKCQtw9PPDw9KCm9tbrWjfqAhnLc9l99Bwq
      yYTSyQd7fSEXUy5jUOho4qykpE5JdtJpUtLSUTk3IdTPicNRZ8krqmDggL6oFLd2J2jPji1I
      Cg3VtUbcdAqq9WaKC4voGhHO+fNxeOgkDp+IJrewmhF39WDnzj2kp2fS5+6RxB7bT3p6Or7B
      YZgrstG6+3Ns/27SMzIIatsVWVkGsSlpmFXORHRse7M39XfFnDnG5bwyLHXVBASHcOLYjySn
      ZuDu3ZyyrBhSUi+Dox/+znIK9SoyLxzlclo6dl6BBLhLHDubQH65mXv6dmTH7gNkZmbTq28v
      Lp6PpbmfK7v2HyEzO5+7hw0jcv8u0tMzCO3YnWY+bjd70xuTfsZqtUp5WZek/QePSRarVTIb
      9VJKcrJUZzRL5cUFUnF5lWSoq5aSUy5JRrNFslosUvrlS1JZZY10O6gsK5Z279oj1eiNkslQ
      KyUnJUol5VVSRtxJ6cDJOMlqtUhpqSlSeVWtZLVapcK8bCknv1iySlapprJMSklNlyxWq5Sf
      kylV1xmlqvJiKTU9S7JarZLJUCelJKdIeqP5Zm/mH2I2GaTDB/dKmXnFktlQKyUkxEvx8fFS
      Tn6RZNTXSMnJKZLRbJG2rF8jlVQbJENtlZSUkiqZLFbJajFLqSnJUmWNXrJeaY+8wlLJajFK
      l9MyJavVKuVmpUuFJeWSZLVKFaWFUlpmjmS1Wm/2Zl/jmtOgkmShttaAg4P9zcrkP6q6uhqd
      TtfotfKyMpxcXK7LuP/bSW1NDXZae+Ty397usrIyXFxcuVObRlwHEGzanXE5TxD+IhEAwaaJ
      AAg2TQRAsGkiAIJNEwEQbJoIgGDTRAAEmyYCINg0EQDBpokACDZNBECwaSIAgk0TARBsmgiA
      YNNEAASbJgIg2DQRAMGmiQAINk0EQLBpIgCCTRMBEGyaCIBg00QABJsmAiDYNBEAwaaJAAg2
      TQRAsGkiAIJNEwEQbJoIgGDTRAAEmyYCINg0EQDBpokACDZNBECwaSIAgk0TARBsmgiAYNP+
      D+4vK6tidbM7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='102' name='What If Sales' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
